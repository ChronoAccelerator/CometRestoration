do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=1;local v18;v15=v4(v3(v15,5),"..",function(v29)if (v1(v29,2)==79) then v18=v0(v3(v29,1,1));return "";else local v62=0;local v63;while true do if (v62==0) then v63=v2(v0(v29,16));if v18 then local v93=v5(v63,v18);v18=nil;return v93;else return v63;end break;end end end end);local function v19(v30,v31,v32)if v32 then local v64=0 + 0 + 0;local v65;while true do if (v64==(0 -0)) then v65=(v30/((1440 -(467 + 596 + 375))^(v31-(1 + 0))))%((574 -(169 + 403))^(((v32-(301 -(153 + 125 + 22))) -(v31-(1 + 0))) + 1 + 0));return v65-(v65%(1 + 0 + 0));end end else local v66=(1 + 1)^(v31-(2 -1));return (((v30%(v66 + v66))>=v66) and (1571 -(985 + 585))) or 0;end end local function v20()local v37=v1(v15,v17,v17);v17=v17 + 1;return v37;end local function v21()local v38=343 -(307 + 36);local v39;local v40;while true do if (v38==(1 + 0)) then return (v40 * ((825 -(280 + 366)) + 77)) + v39;end if (v38==(1658 -((1107 -(246 + 775)) + 1572))) then v39,v40=v1(v15,v17,v17 + (2 -0));v17=v17 + (5 -3);v38=1 -0;end end end local function v22()local v41,v42,v43,v44=v1(v15,v17,v17 + 1 + 2);v17=v17 + 2 + 2;return (v44 * (41446147 -24668931)) + (v43 * (67184 -(1344 + 114 + 190))) + (v42 * (983 -727)) + v41;end local function v23()local v45=0 + 0;local v46;local v47;while true do if (v45==(1 -0)) then return (( -(9 -7) * v19(v47,9 + 23)) + 1 + (1512 -(763 + 749))) * ((2 + 0)^(v19(v47,62 -(2 + 11 + 28),18 + 13) -(295 + 728))) * ((((v19(v47,785 -(668 + 116),55 -(21 + 14)) * ((2 + 0)^(44 -12))) + v46)/(2^(513 -(147 + 314)))) + ((2038 -(163 + 305)) -(901 + 668)));end if (v45==(78 -(18 + 60))) then v46=v22();v47=v22();v45=875 -(755 + 119);end end end local function v24(v33)local v48=0 -0;local v49;local v50;while true do if (v48==(3 + 0)) then return v6(v50);end if ((0 + 0)==v48) then v49=nil;if  not v33 then local v90=225 -(18 + 207);while true do if (0==v90) then v33=v22();if (v33==(0 -(0 -0))) then return "";end break;end end end v48=1 + 0 + 0;end if (v48==(1 + 0 + 0)) then v49=v3(v15,v17,(v17 + v33) -(1192 -(934 + 257)));v17=v17 + v33;v48=2;end if (v48==(7 -5)) then v50={};for v74=156 -(91 + 64), #v49 do v50[v74]=v2(v1(v3(v49,v74,v74)));end v48=2 + 1 + 0;end end end local v25=v22;local function v26(...)return {...},v11("#",...);end local function v27()local v51=0 -0;local v52;local v53;local v54;local v55;local v56;local v57;local v58;while true do if (1~=v51) then else local v72=0;while true do if (v72==1) then v51=1802 -(1752 + 48);break;end if (v72~=(0 + 0)) then else v54=nil;v55=nil;v72=1237 -(392 + 844);end end end if (v51~=0) then else local v73=0 -0;while true do if (v73==(2 -1)) then v51=1;break;end if (v73~=0) then else v52=0;v53=nil;v73=1;end end end if (v51~=(224 -(213 + 8))) then else v58=nil;while true do local v76=0 -0;local v77;while true do if (v76==0) then v77=0;while true do if (v77~=0) then else local v97=0 + 0;while true do if (v97==(0 + 0)) then local v99=0;while true do if (0==v99) then if (v52==(1 -0)) then local v105=0 + 0;local v106;while true do if (v105==0) then v106=1411 -(246 + 1165);while true do if (2==v106) then v52=5 -3;break;end if (v106==1) then local v184=0 + 0;while true do if ((2 -1)==v184) then v106=2;break;end if (v184==(0 + 0)) then for v214=1,v57 do local v215=0;local v216;local v217;local v218;while true do if (v215~=1) then else v218=nil;while true do if (v216==1) then if (v217==(1 + 0)) then v218=v20()~=0;elseif (v217==(1805 -(112 + 1691))) then v218=v23();elseif (v217~=(2 + 1)) then else v218=v24();end v58[v214]=v218;break;end if (v216==(0 -0)) then v217=v20();v218=nil;v216=2 -1;end end break;end if (0~=v215) then else local v246=0;while true do if (v246==(2 -1)) then v215=1;break;end if (v246~=(0 + 0)) then else v216=0 + 0;v217=nil;v246=1;end end end end end v56[109 -(91 + 15)]=v20();v184=1;end end end if (v106~=0) then else v57=v22();v58={};v106=1 + 0;end end break;end end end if (v52==(9 -7)) then local v107=0;while true do local v171=0 + 0;local v172;while true do if (v171~=0) then else v172=0;while true do if (v172==(1768 -(1272 + 496))) then if (v107==1) then local v207=0;while true do if (v207==(0 -0)) then for v247=1,v22() do v55[v247]=v22();end return v56;end end end if (v107==0) then local v208=0 + 0;while true do if (v208~=(0 -0)) then else for v249=3 -2,v22() do local v250=0;local v251;local v252;while true do if (v250==1) then while true do if (v251==(1284 -(598 + 686))) then v252=v20();if (v19(v252,1 -0,84 -(79 + 4))==0) then local v269=1866 -(1417 + 449);local v270;local v271;local v272;local v273;local v274;local v275;while true do if (v269==(3 + 0)) then while true do if (v270==1) then local v278=0;while true do if (v278==1) then v270=2;break;end if (v278~=(0 -0)) then else v273=nil;v274=nil;v278=3 -2;end end end if (0==v270) then local v279=0 -0;while true do if (v279==0) then v271=0 -0;v272=nil;v279=1 + 0;end if (v279~=(1 + 0)) then else v270=1 -0;break;end end end if (v270==(5 -3)) then v275=nil;while true do if (v271==1) then v274=nil;v275=nil;v271=1 + 1;end if (v271~=0) then else local v280=1034 -(71 + 963);while true do if (1==v280) then v271=1;break;end if (v280==(360 -(309 + 51))) then v272=0;v273=nil;v280=1 + 0;end end end if (v271==2) then while true do if (v272~=(1 + 1)) then else local v281=0;while true do if (v281==(1622 -(1209 + 413))) then if (v19(v274,1,1)==1) then v275[2]=v58[v275[2]];end if (v19(v274,1 + 1,1 + 1)==(1 + 0)) then v275[6 -3]=v58[v275[3]];end v281=1 -0;end if (v281==1) then v272=3;break;end end end if (v272==(969 -(941 + 28))) then local v282=535 -(249 + 286);local v283;while true do if ((0 -0)==v282) then v283=0 -0;while true do if (v283==(2 -1)) then v272=1;break;end if (0==v283) then local v291=0;while true do if (v291==(1 + 0)) then v283=1;break;end if (v291==(271 -(144 + 127))) then v273=v19(v252,359 -(318 + 39),3);v274=v19(v252,4,401 -(293 + 102));v291=1;end end end end break;end end end if (v272==(1 + 2)) then if (v19(v274,3,3 + 0)==1) then v275[4]=v58[v275[4]];end v53[v249]=v275;break;end if (v272==(4 -3)) then local v285=0 -0;while true do if (v285==0) then v275={v21(),v21(),nil,nil};if (v273==(0 + 0)) then local v289=0 + 0;local v290;while true do if (v289~=0) then else v290=0 + 0;while true do if (v290==(0 -0)) then v275[3]=v21();v275[4]=v21();break;end end break;end end elseif (v273==(1929 -(1442 + 486))) then v275[3 + 0]=v22();elseif (v273==(315 -(201 + 112))) then v275[1433 -(466 + 964)]=v22() -(2^(52 -36));elseif (v273~=3) then else local v296=1569 -(1162 + 407);local v297;while true do if (v296~=0) then else v297=0;while true do if (v297~=0) then else v275[3 + 0]=v22() -(2^16);v275[2 + 2]=v21();break;end end break;end end end v285=1;end if (v285==(1 + 0)) then v272=1121 -(304 + 815);break;end end end end break;end end break;end end break;end if (v269==2) then v274=nil;v275=nil;v269=1 + 2;end if (v269~=0) then else v270=1873 -(1188 + 685);v271=nil;v269=1 -0;end if (v269==1) then v272=nil;v273=nil;v269=2;end end end break;end end break;end if (v250==(0 + 0)) then local v262=0;while true do if (v262==(392 -(348 + 43))) then v250=2 -1;break;end if (v262==(0 + 0)) then local v266=0;while true do if (v266~=0) then else v251=0;v252=nil;v266=1;end if (v266==(1 + 0)) then v262=3 -2;break;end end end end end end end for v253=1 + 0,v22() do v54[v253-(1 + 0)]=v27();end v208=1 -0;end if (v208~=1) then else v107=1 + 0;break;end end end break;end end break;end end end end v99=1 + 0;end if ((4 -3)==v99) then v97=1;break;end end end if (v97==1) then v77=1;break;end end end if ((1524 -(278 + 1245))==v77) then if (v52==0) then local v98=812 -(295 + 517);while true do if (v98==0) then local v100=0 + 0;while true do if ((1 + 0)~=v100) then else v98=1 + 0;break;end if ((0 + 0)==v100) then v53={};v54={};v100=1;end end end if (v98==1) then local v101=0 -0;while true do if (v101~=1) then else v98=2;break;end if (v101==(0 -0)) then v55={};v56={v53,v54,nil,v55};v101=1 + 0;end end end if (v98~=2) then else v52=1 -0;break;end end end break;end end break;end end end break;end if (v51~=(1488 -(1408 + 78))) then else v56=nil;v57=nil;v51=3 -0;end end end local function v28(v34,v35,v36)local v59=v34[1];local v60=v34[2];local v61=v34[3];return function(...)local v67=1;local v68= -1;local v69={...};local v70=v11("#",...) -1;local function v71()local v78=v59;local v79=Const;local v80=v60;local v81=v61;local v82=v26;local v83={};local v84={};local v85={};for v91=0 -(62 -(35 + 27)),v70 do if ((v91>=v81) or (((2154 + 41) -(1124 + 645))>(18619 -14870))) then v83[v91-v81]=v69[v91 + (2 -1)];else v85[v91]=v69[v91 + 1];end end local v86=(v70-v81) + (2 -1);local v87;local v88;while true do local v92=0 -0;while true do if ((((8280 -(635 + 621)) -4299)>=(4269 -2814)) and (v92==(1 + 0))) then if (((409 + 573)<(5489 -(258 + 352 + 122 + 46))) and (v88<=(19 -5))) then if (((7587 -4231)>=((714 + 1255) -(403 + 303))) and (v88<=((11 -8) + 3))) then if ((v88<=2) or ((4570 -(78 + 349))<(4663 -(1300 + 340)))) then if ((458<=4579) and (v88<=(0 + 0))) then local v102=(104 + 189) -(57 + 236);local v103;local v104;while true do if ((v102==1) or (931>=(4350 -3189))) then while true do if (((274 + 668)<(2214 + 1654)) and (v103==0)) then v104=v87[2];v85[v104](v12(v85,v104 + (215 -(17 + 174 + 23)),v87[3]));break;end end break;end if (((3957 -2029)<=(3339 -(166 + 83))) and (v102==(0 + 0))) then v103=0;v104=nil;v102=1;end end elseif (((3121 -(187 + 162 + 172))>(213 -157)) and (v88==((277 -(167 + 107)) -2))) then local v108=1311 -(1237 + 13 + 61);local v109;while true do if (((1069 -699)<1988) and (0==v108)) then v109=v87[853 -(792 + 59)];v85[v109]=v85[v109](v12(v85,v109 + (2 -1),v87[1066 -(731 + 332)]));break;end end else v85[v87[2 + 0]]=v36[v87[7 -4]];end elseif ((v88<=(4 + 0)) or (((1289 -816) + 710)==(2523 -(50 + (172 -105))))) then if ((v88==(1091 -(48 + 1040))) or ((1802 + 3194)<2676)) then v85[v87[2 + 0]]=v28(v80[v87[821 -(193 + 625)]],nil,v36);else v85[v87[2]]=v85[v87[1 + (5 -3)]][v85[v87[3 + 1]]];end elseif ((v88>(4 + 1 + 0)) or ((804 + 2287)<=(279 + 1782))) then local v113=(19 + 223) -(214 + 28);local v114;local v115;local v116;local v117;while true do if ((v113==(0 -0)) or ((5073 -3979)==(6053 -(742 + 444)))) then v114=533 -(339 + 194);v115=nil;v113=143 -(15 + 127);end if ((v113==(1 + (554 -(267 + 286)))) or ((759 -591)>=2317)) then while true do if ((v114==1) or (488>=2257)) then local v185=0 -0;while true do if (((4322 -(630 + 1190))<(5776 -(902 + 511))) and ((0 -0)==v185)) then v117={};v116=v9({},{__index=function(v219,v220)local v235=0 + 0;local v236;local v237;while true do if ((0==v235) or ((4528 -2246)<(1134 -(19 + 8)))) then v236=0 -0;v237=nil;v235=1;end if ((3619<=(14469 -9829)) and (v235==(1060 -(634 + 425)))) then while true do if (((5922 -4151)==(3737 -(1937 + 29))) and (v236==((333 -(111 + 222)) -0))) then local v264=0 -0;while true do if ((v264==(0 -0)) or (((106 -66) + 149)>=(1351 + 2830))) then v237=v117[v220];return v237[1 + 0][v237[9 -7]];end end end end break;end end end,__newindex=function(v221,v222,v223)local v238=0;local v239;local v240;while true do if (((2570 -(749 + 552))==(901 + 368)) and (v238==((6 -4) -1))) then while true do if (((2711 + 186)>(2586 -1925)) and (v239==(0 + 0))) then v240=v117[v222];v240[1 + 0][v240[1 + 1]]=v223;break;end end break;end if ((4853>=(5851 -2879)) and (v238==(0 + 0))) then v239=0;v240=nil;v238=4 -3;end end end});v185=1;end if (((2 -1)==v185) or ((1692 -(522 + 1166))>4281)) then v114=3 -1;break;end end end if ((v114==(0 + 0)) or ((2709 + 2104)<=(2832 -(47 + 207)))) then v115=v80[v87[(1388 -(219 + 1167)) + 1]];v116=nil;v114=1 + 0;end if ((v114==(1865 -(1122 + 741))) or ((207 -144)>(2386 -956))) then for v201=1 + 0 + 0,v87[14 -10] do local v202=0 -0;local v203;while true do if ((v202==(0 -0)) or ((1092 -(75 + 21))>1849)) then v67=v67 + ((2684 -(378 + 1257)) -(277 + 771));v203=v78[v67];v202=1 -(0 -0);end if ((v202==(3 -2)) or ((4558 -2649)>(1270 + 820))) then if ((v203[3 -(48 -(15 + 31))]==(312 -(20 + 269))) or ((1425 -(629 + (1665 -(1423 + 102))))>(2669 + 335 + 51))) then v117[v201-1]={v85,v203[6 -3]};else v117[v201-(2 -1)]={v35,v203[1485 -(1058 + 424)]};end v84[ #v84 + (2 -(1 + 0))]=v117;break;end end end v85[v87[9 -7]]=v28(v115,v116,v36);break;end end break;end if (((4607 -2984)<(694 + 956)) and ((1 + 0)==v113)) then v116=nil;v117=nil;v113=2 + 0;end end elseif ((v87[1359 -(1274 + 83)]==v85[v87[4]]) or ((638 + 1498)>=(2087 + 2397))) then v67=v67 + (1405 -(1102 + 302));else v67=v87[1 + 2];end elseif ((v88<=(1876 -(756 + 1110))) or (1591<(1750 -(648 + 31)))) then if (((4075 -(3358 -(322 + 30)))>(67 + 330)) and (v88<=(8 + (411 -(30 + 381))))) then if ((v88>(1413 -(373 + 1033))) or ((71 + 402)==(1094 + 1500))) then local v118=756 -(9 + 747);local v119;local v120;local v121;while true do if (((1 + 0)==v118) or (4762<(8473 -6031))) then v121=nil;while true do if (((1 -0)==v119) or ((1868 -(150 + 202))>(6999 -2989))) then v85[v120 + (784 -(367 + 416))]=v121;v85[v120]=v121[v87[4 + 0]];break;end if ((1799<=(9748 -6219)) and (v119==0)) then local v189=0 -0;while true do if (((0 + 0)==v189) or ((4982 -3067)<=(123 + 398))) then v120=v87[1039 -(275 + 762)];v121=v85[v87[1890 -((1859 -(100 + 118)) + 246)]];v189=798 -((1224 -659) + 232);end if (((2889 -(1900 + 41))<=4554) and (v189==(1 -0))) then v119=1523 -(1022 + 500);break;end end end end break;end if ((718==(353 + 365)) and ((0 -0)==v118)) then v119=0;v120=nil;v118=1;end end else v85[v87[1 + (4 -3)]]=v85[v87[3 -0]][v87[(7 -5) + 2]];end elseif ((v88>(20 -11)) or (4690<=(4569 -(141 + (3272 -1433))))) then local v123=0 -0;local v124;local v125;local v126;local v127;local v128;local v129;while true do if ((2336>=(3525 -(1272 + 238))) and ((1959 -(1076 + 881))==v123)) then v128=nil;v129=nil;v123=745 -(102 + 640);end if ((v123==(1 + 0)) or ((2668 -1830)==(59 -28))) then v126=nil;v127=nil;v123=2;end if ((v123==0) or ((3852 + 825)<(4573 -2523))) then v124=0;v125=nil;v123=1 + 0;end if ((v123==3) or ((5023 -(469 + 749))<=((2324 -(747 + 701)) -(122 + 51)))) then while true do if (((8 + 26)==(1058 -(727 + (1224 -927)))) and (v124==1)) then local v190=1505 -(389 + 1116);while true do if (((1938 -(255 + 635 + 1047))==v190) or ((7981 -4689)==(3308 -(963 + 436)))) then v124=1871 -(1842 + 27);break;end if (((988 + 752)<(5012 -(1194 + 198))) and (v190==(0 + 0))) then v127=nil;v128=nil;v190=1 + 0;end end end if ((v124==(2 + 0)) or ((285 + 4506)<=4252)) then v129=nil;while true do if (((3095 -(127 + 220))==(1376 + 1372)) and (v125==(473 -(9 + 463)))) then local v209=1436 -(815 + 621);local v210;while true do if (((1718 -(198 + 236))==(698 + 586)) and (v209==(296 -(165 + 131)))) then v210=1305 -(337 + 968);while true do if (((915 -(104 + 109))==(1651 -(191 + 758))) and (v210==(1 + 0))) then v125=1464 -((2197 -956) + (554 -333));break;end if (((2808 -(216 + 1768))==(1234 -(211 + (1668 -(222 + 1247))))) and (v210==0)) then v68=(v128 + v126) -(95 -(83 + 11));v129=1743 -(305 + 1438);v210=(1 -0) + 0;end end break;end end end if ((v125==0) or ((2455 -(83 + 1265))==(1053 + 2155))) then local v211=0 + 0;while true do if (((52 + 352)<1580) and (v211==(0 -(0 + 0)))) then local v243=0;while true do if (((4734 -(400 + 152))==4182) and (v243==(1 + 0))) then v211=1;break;end if ((v243==(0 + 0)) or ((3121 -(239 + 1202))==2743)) then v126=v87[2 -(0 + 0)];v127,v128=v82(v85[v126](v12(v85,v126 + (1 -0),v87[8 -(127 -(96 + 26))])));v243=1 + 0;end end end if ((v211==(1417 -((2604 -(999 + 410)) + 221))) or (138>3771)) then v125=1;break;end end end if ((v125==((8 -6) + 0)) or (385>(2978 -(332 + 1451)))) then for v225=v126,v68 do local v226=0 + 0;local v227;local v228;while true do if ((v226==1) or ((3469 -(253 + 1521))<=(2645 -1424))) then while true do if (((2868 + 1580)==((4637 -2391) + 2202)) and (v227==0)) then v228=0 -0;while true do if ((v228==(0 + 0)) or ((9923 -5327)<(2150 -(1050 + 507)))) then v129=v129 + (1079 -(29 + 1049));v85[v225]=v127[v129];break;end end break;end end break;end if ((4235>(9584 -6607)) and (v226==(1812 -(525 + 207 + 1080)))) then v227=1110 -(416 + 694);v228=nil;v226=752 -(504 + 247);end end end break;end end break;end if ((v124==(0 + 0 + 0)) or (((5691 -(573 + 1259)) -(636 + 92))<=(488 + 216))) then local v191=0 + 0;while true do if ((v191==1) or (((1179 -(980 + 66)) + 105)>=(3610 -(174 + (1847 -(1018 + 619)))))) then v124=(1 -0) + 0;break;end if (((14195 -11043)<=(3520 + 406)) and (v191==(0 + 0))) then v125=(337 + 598) -(549 + 386);v126=nil;v191=3 -2;end end end end break;end end else local v130=0 + 0;local v131;local v132;local v133;local v134;while true do if ((v130==(2 -1)) or (1386<(311 -240))) then v133=nil;v134=nil;v130=2;end if ((v130==(2 + 0)) or ((1121 + 512)<=(2179 -979))) then while true do if ((v131==(3 -2)) or (1271==4139)) then v134=v85[v132 + 1 + (1 -0)];if ((2156>(44 + 239)) and (v134>(0 -(0 + 0)))) then if ((v133>v85[v132 + (1 -0)]) or ((2005 -691)>(4400 -1338))) then v67=v87[2 + 1];else v85[v132 + (806 -(573 + 230))]=v133;end elseif ((909<2690) and (v133<v85[v132 + (1054 -(58 + 995))])) then v67=v87[(1587 -(25 + 36)) -(202 + 481 + 840)];else v85[v132 + 3]=v133;end break;end if ((((25098 -18468) -3326)<=(740 + 4179)) and ((0 -0)==v131)) then local v192=0 + 0;while true do if ((v192==(0 + 0)) or (1488==(259 + 883))) then v132=v87[675 -(661 + 12)];v133=v85[v132];v192=1;end if (((1414 + 2299)>=(9 + 4 + 552)) and (v192==1)) then v131=1;break;end end end end break;end if ((v130==(147 -(4 + 143))) or (3722<(677 + 1265))) then v131=0 + 0;v132=nil;v130=(308 -(132 + 173)) -2;end end end elseif ((v88<=(1217 -(142 + (2490 -1427)))) or ((1254 -516)>(4481 -(1118 + 21)))) then if (((3132 -2321)<=((1823 -(116 + 145)) + 715)) and (v88==11)) then v85[v87[2 + 0]]=v35[v87[8 -5]];else local v136=0 -0;local v137;local v138;while true do if ((404<(3111 + 593 + 106)) and (v136==(0 -0))) then v137=0;v138=nil;v136=1 + 0;end if ((v136==(1953 -(769 + 1183))) or ((3343 -(677 + 154))<=(2211 -(81 + 169)))) then while true do if ((3861>=3205) and (v137==(1907 -(321 + 1586)))) then v138=v87[2];v85[v138]=v85[v138](v12(v85,v138 + 1 + (0 -0),v68));break;end end break;end end end elseif ((v88>(20 -7)) or ((8501 -3646)==(1658 + 1921))) then v85[v87[483 -(76 + 405)]][v87[3]]=v87[189 -(67 + 118)];else local v140=611 -(482 + 129);local v141;local v142;while true do if ((v140==(1597 -(641 + 956))) or ((1601 -461)<(1402 -(213 + 137)))) then local v176=(82 + 947) -(965 + 64);while true do if ((0==v176) or (869>=(2877 + 929))) then v141=v87[2 + 0];v142={};v176=1;end if ((v176==(1 + 0)) or ((4552 -(505 + 109))==(15671 -11618))) then v140=1 + (0 -0);break;end end end if ((v140==(1 -0)) or (4833<=(2197 -(322 + 87 + (1910 -(46 + 667)))))) then for v178=1421 -(296 + 1124), #v84 do local v179=0 + 0;local v180;local v181;local v182;while true do if ((2776==(8061 -5285)) and (v179==(1 + 0))) then v182=nil;while true do if ((v180==(0 -0)) or ((4579 + 268)<(1232 + 1938))) then local v231=0 -0;while true do if ((v231==(0 -0)) or (2659==(5015 -(967 + 383)))) then v181=0;v182=nil;v231=1036 -(101 + 934);end if ((v231==1) or ((8360 -3544)<=((24154 -11861) -7788))) then v180=2 -(441 -(165 + 275));break;end end end if (((388 + 2880)>(413 + 599)) and (v180==(2 -1))) then while true do if (((54 -(16 + 38))==v181) or ((666 + (2210 -(532 + 271)))<((880 -(15 + 414)) -(143 + 17)))) then v182=v84[v178];for v256=1586 -(652 + (1382 -(378 + 70))), #v182 do local v257=1646 -(1374 + 272);local v258;local v259;local v260;while true do if (((344 + 1811)<(11063 -6156)) and (v257==(0 -0))) then v258=v182[v256];v259=v258[1 + 0];v257=1102 -(754 + 347);end if (((1872 -((6871 -5109) + 109))==v257) or ((22 -6)>(1265 + 2156))) then v260=v258[2];if (((v259==v85) and (v260>=v141)) or (2058==((4488 + 1256) -(160 + 1329)))) then local v268=0 + 0;while true do if (((5758 -(692 + 954))<=(5774 -(248 + 31 + 598))) and (v268==(0 -0))) then v142[v260]=v259[v260];v258[1]=v142;break;end end end break;end end end break;end end break;end end break;end if (((2698 -(213 + 309))<(4877 -(1616 + 86))) and (v179==(737 -(397 + 340)))) then v180=0;v181=nil;v179=1 + 0;end end end break;end end end elseif (((18 + 1964)<1997) and (v88<=(81 -59))) then if ((2018>=(2401 -(1440 + 488))) and (v88<=(62 -44))) then if ((v88<=(1413 -(1007 + 390))) or (3013>=3749)) then if (((3910 -(557 + 372))==(2390 + 591)) and (v88>(57 -42))) then local v143=0 -0;local v144;local v145;while true do if (((830 + 2154)>(3850 -1156)) and (((5 -2) -2)==v143)) then while true do if ((v144==(0 + 0)) or ((4048 -1785)>=4009)) then v145=v87[2];v85[v145]=v85[v145](v85[v145 + 1 + 0]);break;end end break;end if ((v143==(140 -(78 + 62))) or ((7717 -4910)>(2718 + 359))) then v144=0 -0;v145=nil;v143=1;end end else v67=v87[906 -(276 + 627)];end elseif ((v88>(8 + 9)) or ((2231 -(367 + 362))>(2841 -(396 + 496)))) then v85[v87[1 + 1]]={};elseif ((v85[v87[719 -(470 + 247)]]==v87[1110 -(51 + 164 + 891)]) or (4838<=(1719 + 567 + 1900))) then v67=v67 + (1 -0);else v67=v87[3];end elseif ((v88<=(46 -(221 -(175 + 20)))) or (2257<1123)) then if ((v88==(87 -(27 + 41))) or ((3017 -976)<=855)) then v85[v87[2]]=v87[316 -(96 + 217)];else v85[v87[536 -(118 + 416)]]();end elseif (((3253 -(1195 + 492))<=(829 + 845)) and (v88==(82 -61))) then local v148=(1329 -(1248 + 81)) -0;local v149;local v150;while true do if (((0 + 0)==v148) or ((1398 -(5 + 394))>(3091 -((16 -6) + 84)))) then v149=0 + 0;v150=nil;v148=377 -(238 + 138);end if (((4506 -(116 + 359))<4696) and (v148==(1 + 0 + 0))) then while true do if ((2465>(1777 -(737 + 58))) and (v149==0)) then v150=v87[2];v85[v150](v85[v150 + (1 -0)]);break;end end break;end end else local v151=0 + 0;local v152;local v153;local v154;while true do if (((198 + 458)>(525 + 82)) and (v151==(0 + 0))) then v152=609 -(440 + 169);v153=nil;v151=2 -1;end if (((1003 + 2184 + 1517)>(5333 -(305 + 593))) and (v151==(1 + 0))) then v154=nil;while true do if (((3368 -(28 + 216))>(435 -96)) and (v152==1)) then while true do if ((v153==(0 + 0)) or (3111<=(1898 -(399 + 557)))) then v154=v87[1 + 1];v85[v154]=v85[v154]();break;end end break;end if ((v152==(1932 -(1288 + 644))) or (4208<(1629 -1135))) then local v195=0 + 0;while true do if (((16 + 1521)>=471) and ((0 -0)==v195)) then v153=1259 -(210 + (1840 -(642 + 149)));v154=nil;v195=1956 -(84 + 1871);end if ((3722==3722) and (v195==(2 -1))) then v152=1;break;end end end end break;end end end elseif ((v88<=(822 -(174 + 622))) or (2690==(1666 -507))) then if (((2216 + 2453)<=(952 + 3924)) and (v88<=(62 -38))) then if (((2380 -(966 + 18))<3543) and (v88==(11 + 12))) then v85[v87[2]]=v85[v87[3]];else local v156=855 -(819 + 36);local v157;local v158;while true do if ((v156==(0 + 0)) or ((7662 -4655)<(3524 -(586 + 122)))) then v157=v87[2];v158=v85[v157];v156=1888 -(1612 + 275);end if (((6953 -3204)>210) and (v156==(1727 -((4645 -3660) + 741)))) then for v183=v157 + 1,v87[3] do v7(v158,v85[v183]);end break;end end end elseif (((7476 -4937)>=1291) and (v88>25)) then local v159=1753 -(1366 + 387);local v160;local v161;local v162;local v163;while true do if ((v159==0) or ((5020 -(444 + 471))<(6 + 4057))) then v160=0;v161=nil;v159=4 -(3 + 0);end if (((1623 -(17 + 1172))==((654 + 136) -356)) and (v159==(2 -0))) then while true do if ((v160==1) or ((3711 + 769)==(961 -(693 -373)))) then v163=v87[3];for v204=539 -(386 + 152),v163 do v162[v204]=v85[v161 + v204];end break;end if ((v160==(1735 -(119 + (2752 -1136)))) or (((3780 -(144 + 774)) -1961)>=(4662 -3674))) then local v196=0 -0;local v197;while true do if (((355 -(327 + 28))==v196) or ((1350 -(22 + 655))==(4243 -(215 + 1304)))) then v197=0 + 0;while true do if ((v197==(0 -0)) or ((2244 -(386 + 537))==(5468 -(364 + 751)))) then v161=v87[416 -(352 + 62)];v162=v85[v161];v197=1;end if ((v197==(1 + 0)) or ((480 + 264)>=2169)) then v160=2 -(723 -(366 + 356));break;end end break;end end end end break;end if (((1 -0)==v159) or ((7696 -(1992 + 3880))<1460)) then local v177=(1763 -(157 + 1606)) -0;while true do if (((18 + 27)==(31 + 14)) and (v177==0)) then v162=nil;v163=nil;v177=1 + 0;end if ((v177==1) or (3721<=(14400 -11427))) then v159=2 + 0;break;end end end end else local v164=231 -(124 + 107);local v165;local v166;local v167;local v168;while true do if ((v164==(1782 -(1462 + 318))) or ((305 + 2262 + 695)>=(6593 -3055))) then while true do if ((v165==2) or ((2753 + 1809)<=(1427 + 321))) then if ((v167>(0 + 0)) or ((350 + (997 -723))>((2226 -(455 + 1155)) + 2298))) then if ((v168<=v85[v166 + (948 -(562 + (847 -(126 + 336))))]) or ((1828 -(10 + 190))==(3707 -2297))) then local v232=(0 -0) -0;local v233;while true do if (((303 + 1504)==(1803 + (5 -1))) and (0==v232)) then v233=0 -0;while true do if (((3274 -(265 + 1470))==(3394 -1855)) and (v233==(1242 -(1205 + 37)))) then v67=v87[3 + 0];v85[v166 + 3]=v168;break;end end break;end end end elseif ((4141<(11619 -7405)) and (v168>=v85[v166 + (1 -0)])) then local v234=0 -0;while true do if (((4555 -3474)<=(12249 -7639)) and (v234==(298 -(279 + 19)))) then v67=v87[(1583 -(145 + 1150)) -(151 + 134)];v85[v166 + 3]=v168;break;end end end break;end if ((v165==(0 -0)) or (2240>(1974 + 1771))) then local v198=0 + 0;local v199;while true do if ((v198==(295 -((598 -417) + 114))) or ((3119 -(203 + 69))<=(2843 -(50 + 731)))) then v199=(0 -0) + 0;while true do if (((2320 -1011)>=(104 + 19)) and (v199==(1304 -(290 + 1014)))) then local v244=0 -0;while true do if (((560 + 4093)==4653) and (v244==((1603 -(467 + 1136)) + 0))) then v166=v87[(3699 -2532) -(1088 + 77)];v167=v85[v166 + (4 -2)];v244=1408 -(398 + 1009);end if (((2247 + 620)==((5831 -(118 + 181)) -2665)) and (v244==(1 -0))) then v199=1;break;end end end if (((2840 -(417 + 702))<=(1186 + 875)) and (v199==1)) then v165=1;break;end end break;end end end if (((1069 + 589 + 1046)>=(5293 -(4269 -(8 + 772)))) and (v165==(332 -(64 + 267)))) then local v200=0 + 0;while true do if ((v200==(179 -(43 + 136))) or ((2959 -(1117 + (953 -(16 + 412))))<=31)) then local v213=0 -0;while true do if (((1162 -(264 + 80 + 818))==v213) or ((3996 -(53 + 1649))>=(1490 + 2267))) then v168=v85[v166] + v167;v85[v166]=v168;v213=1 + 0;end if ((v213==(1 -0)) or ((563 -267)>(437 + 73))) then v200=(18 -(16 + 1)) + 0;break;end end end if (((3535 -(779 + 71))<=((5668 -(10 + 18)) -2060)) and ((1 + 0)==v200)) then v165=2;break;end end end end break;end if ((v164==0) or (4591<=(4567 -(2753 + 502)))) then v165=0 + 0;v166=nil;v164=396 -(263 + 132);end if ((v164==(1 -0)) or ((10747 -7898)==(2117 + 1642))) then v167=nil;v168=nil;v164=2 -0;end end end elseif (((4088 -(58 + 287))>=(3576 -(84 + 120 + 295))) and (v88<=((945 -(104 + 145)) -(12 + 656)))) then if ((v88>27) or (3254>=(4410 -((2242 -(655 + 1175)) + (1023 -(46 + 636)))))) then v85[v87[2 + 0]]=v87[5 -2]~=(0 -0);else v85[v87[2]][v87[1192 -(882 + (800 -493))]]=v85[v87[17 -13]];end elseif ((v88==29) or ((196 + 3477)==(3953 -(130 + 109)))) then for v173=v87[3 -1],v87[3 + 0] do v85[v173]=nil;end else do return;end end v67=v67 + (1 -0);break;end if ((v92==(0 + 0)) or ((177 + 4427)<=(3767 -2274))) then local v96=0 -0;while true do if (((1192 -(314 + 183))<=3541) and (v96==(990 -(718 + 272)))) then v87=v78[v67];v88=v87[2 -(2 -1)];v96=1 + 0;end if ((v96==(1 + 0)) or (1169>=2381)) then v92=1;break;end end end end end end A,B=v26(v10(v71));if  not A[1] then local v89=v34[4][v67] or "?";error("Script error at ["   .. v89   .. "]:"   .. A[2]);else return v12(A,2,B);end end;end return v28(v27(),{},v16)();end v14("LOL!",v8());end
