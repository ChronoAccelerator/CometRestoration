do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (v17==3) then function v24()local v38=0 -0;local v39;local v40;while true do if ((1678 -(242 + 1436))==v38) then v39=v23();v40=v23();v38=4 -3;end if (v38==1) then return (( -((2070 -(840 + 14)) -(209 + 1005)) * v20(v40,32)) + (1195 -(838 + 356))) * ((2 + 0 + 0 + 0)^(v20(v40,1248 -(752 + 475),127 -96) -((1464 -(151 + 834)) + (1380 -836)))) * ((((v20(v40,1 -(0 + 0),10 + 10) * (2^32)) + v39)/(((1642 -(1359 + 281)) + 0)^(43 + 9))) + (725 -(70 + 654)));end end end v25=nil;function v25(v30)local v41;if  not v30 then v30=v23();if (v30==(0 -0)) then return "";end end v41=v3(v15,v18,(v18 + v30) -(1 + 0));v18=v18 + v30;local v42={};for v62=1 + 0, #v41 do v42[v62]=v2(v1(v3(v41,v62,v62)));end return v6(v42);end v26=v23;v17=4;end if (v17==1) then function v20(v31,v32,v33)if v33 then local v64=(v31/((6 -4)^(v32-((69 + 1801) -(1317 + 103 + 449)))))%((5 -3)^(((v33-(1 + 0)) -(v32-(1470 -(1316 + 153)))) + (1 -0)));return v64-(v64%(960 -(773 + 186)));else local v65=(1 + 1)^(v32-(468 -(177 + 290)));return (((v31%(v65 + v65))>=v65) and (1774 -(423 + 1350))) or (0 + 0);end end v21=nil;function v21()local v43=v1(v15,v18,v18);v18=v18 + 1;return v43;end v22=nil;v17=2;end if (v17==5) then v29=nil;function v29(v34,v35,v36)local v44=v34[1];local v45=v34[2];local v46=v34[3];return function(...)local v66=1;local v67= -1;local v68={...};local v69=v11("#",...) -1;local function v70()local v73=v44;local v74=Const;local v75=v45;local v76=v46;local v77=v27;local v78={};local v79={};local v80={};for v86=0 + 0 + 0,v69 do if ((v86>=v76) or ((2116 + 1790)<(6490 -3989))) then v78[v86-v76]=v68[v86 + (2 -1)];else v80[v86]=v68[v86 + 1 + 0];end end local v81=(v69-v76) + (1005 -(786 + 218));local v82;local v83;while true do local v87=0 -0;local v88;while true do if (((13249 -9785)<=(4243 -(97 + 479))) and (0==v87)) then v88=1414 -(354 + 1060);while true do if (((8143 -5691)<=((2949 -(283 + 49)) + 233)) and (v88==(0 + 0))) then v82=v73[v66];v83=v82[1 + 0];v88=836 -(666 + 169);end if (((1168 + 192)<(4309 + 360)) and (v88==1)) then if (((63 + 2563)>(2291 -(680 + 1010))) and (v83<=(29 -14))) then if (((6516 -(43 + 1495))==(3041 + 1937)) and (v83<=(2 + 5))) then if ((v83<=(2 + 1)) or ((5488 -2395)<=((4289 -(13 + 1095)) -2397))) then if (((2918 -(1084 + 128))<((2321 -(430 + 397)) + 247)) and (v83<=(1 + 0))) then if ((v83==(1970 -(703 + 1267))) or (2707==(5984 -(206 + 1142)))) then local v112=610 -(172 + 438);local v113;local v114;while true do if ((v112==((759 -(633 + 126)) -0)) or ((324 + 1975)<(181 -80))) then v113=0 + 0;v114=nil;v112=1 + 0;end if ((v112==(1808 -(959 + 548 + 300))) or (((7387 -3297) -(34 + 161))==(3191 -(1094 + 503)))) then while true do if ((v113==(1949 -(390 + 1559))) or ((10467 -6895)<=(1779 -1126))) then v114=v82[152 -(4 + 146)];v80[v114]=v80[v114](v12(v80,v114 + (1555 -(1287 + 267)),v67));break;end end break;end end else v80[v82[2]][v82[11 -8]]=v82[1728 -(328 + 1396)];end elseif ((v83==(1055 -(174 + 879))) or (((4513 -2616) + 1098)>=4711)) then local v116=1256 -(1115 + 141);local v117;local v118;while true do if (((2281 + 2185)>=1765) and ((3 -2)==v116)) then while true do if ((v117==(0 -0)) or ((10494 -7361)<=(3667 -2035))) then v118=v82[1419 -(58 + 1359)];v80[v118]=v80[v118](v80[v118 + (765 -(673 + 91))]);break;end end break;end if ((v116==(835 -(244 + 591))) or (1317<(2296 -1730))) then v117=925 -(6 + (2200 -(819 + 462)));v118=nil;v116=1 + 0;end end else local v119=0;local v120;local v121;local v122;local v123;while true do if ((v119==((1 + 0) -0)) or (188>(406 + 370))) then v122=nil;v123=nil;v119=6 -4;end if (((90 + 55)==145) and (v119==0)) then v120=0;v121=nil;v119=1 + 0;end if ((v119==(1985 -(706 + 1277))) or (2435>=(1493 + 1968))) then while true do if (((1 -0)==v120) or (2224<(4628 -2563))) then local v207=0;while true do if ((v207==(1 + 0)) or ((3174 -(1100 + 664))==229)) then v120=2;break;end if (((15 + 676)<(13647 -(34669 -24698))) and (v207==(0 -0))) then v123=v80[v121] + v122;v80[v121]=v123;v207=2 -1;end end end if (((729 + 102)<=(11007 -6560)) and (v120==2)) then if ((v122>(0 -0)) or ((1742 -((164 -106) + 370))>3688)) then if ((v123<=v80[v121 + ((768 -(504 + 191)) -((27 -16) + 61))]) or (301>(971 -214))) then local v247=0 + 0;local v248;while true do if (((3 + 235)<=((4243 + 2645) -3745)) and (v247==(0 -0))) then v248=996 -(634 + 362);while true do if ((v248==(0 + 0)) or ((3668 -999)==(5635 -(6387 -2890)))) then v66=v82[7 -4];v80[v121 + (1537 -(1198 + 337)) + 1]=v123;break;end end break;end end end elseif ((v123>=v80[v121 + (2 -1)]) or ((396 + 2524)>=(6369 -(601 + 856)))) then local v249=0;local v250;while true do if ((v249==0) or ((605 + 1275)<=(1265 -223))) then v250=377 -(196 + 181);while true do if (((464 -(34 + 263))==(368 -201)) and (v250==(0 + 0))) then v66=v82[4 -1];v80[v121 + ((7697 -6136) -(629 + 929))]=v123;break;end end break;end end end break;end if ((4323==(9056 -4733)) and (0==v120)) then v121=v82[444 -(20 + 422)];v122=v80[v121 + (6 -4)];v120=1 -0;end end break;end end end elseif ((10==(7 + 3)) and (v83<=(3 + (7 -5)))) then if ((v83==4) or ((3403 -2152)<=(189 + 368))) then v80[v82[179 -(99 + 78)]]();elseif ((v80[v82[1 + 1]]==v82[144 -(23 + 117)]) or (((4010 + 1109) -(353 + 1160))<3484)) then v66=v66 + 1;else v66=v82[3];end elseif ((v83>(4 + 2)) or ((1369 + 1298)>=(12642 -8196))) then local v124=1782 -(259 + 1523);local v125;local v126;while true do if ((1==v124) or ((2610 -(81 + 393))==(2525 -(32 + 40)))) then while true do if ((v125==0) or ((139 + 109)==(3416 -(365 + (146 -88))))) then v126=v82[2 + 0];v80[v126](v12(v80,v126 + 1 + 0,v67));break;end end break;end if (((0 + 0)==v124) or ((413 + 95)>=4607)) then v125=(0 + 0) -0;v126=nil;v124=1 + 0;end end else local v127=(894 -(178 + 716)) + 0;local v128;local v129;local v130;local v131;local v132;local v133;while true do if ((v127==((6 -2) -3)) or (3013>=(6434 -(1087 + 702)))) then v130=nil;v131=nil;v127=(5245 -3860) -(1262 + 121);end if (((6008 -(420 + 1188))==(9456 -5056)) and (v127==3)) then while true do if ((1==v128) or ((12156 -9450)>=((33266 -23977) -(3948 + 1236)))) then local v208=0;while true do if ((v208==((0 -0) -0)) or (3640<=(243 + 705))) then v131=nil;v132=nil;v208=1 -0;end if ((v208==(1 -0)) or ((5148 -3410)>(371 + 1384))) then v128=2;break;end end end if ((v128==0) or ((1825 + 926)<=(2158 -1178))) then local v209=0 -0;while true do if (((2424 + 385)==(1297 + 1512)) and ((525 -((1708 -(819 + 854)) + (689 -200)))==v209)) then v128=1217 -(88 + 1128);break;end if ((v209==(0 -0)) or (655>=((15223 -6935) -4633))) then v129=0 + 0;v130=nil;v209=1 -0;end end end if ((v128==(1621 -(1069 + 550))) or ((1991 -(31 + 19))==(2494 + 60))) then v133=nil;while true do if (((3782 -(49 + 230))>(359 -(26 + 20))) and ((889 -(163 + 726))==v129)) then local v242=0 -0;local v243;while true do if (((920 -(647 + 261))==(9 + 3)) and (v242==(694 -(229 + 465)))) then v243=1587 -(1395 + 192);while true do if (((1053 -(130 + 839))<=(4325 -3028)) and (v243==(3 -2))) then v129=1349 -(174 + 1174);break;end if ((2777==(12583 -9806)) and (v243==(0 + 0 + 0))) then v130=v82[1 + 0 + 1];v131,v132=v77(v80[v130](v80[v130 + (1977 -(1841 + (1248 -(955 + 158))))]));v243=1;end end break;end end end if ((v129==(2 -1)) or ((2978 -(910 + 331))>2012)) then local v244=0;local v245;while true do if ((v244==(0 + 0)) or ((781 -520)==(8143 -5309))) then v245=0;while true do if ((1334<(3302 + 800)) and (v245==0)) then local v273=0 -0;while true do if (((7414 -4699)>(236 + 450)) and (v273==1)) then v245=1 + 0;break;end if ((1374<=(1487 + 653)) and (v273==(0 + 0))) then v67=(v132 + v130) -(1 + 0);v133=0 -0;v273=1;end end end if (((621 + 59 + 619)>((5581 -3929) -(3087 -1797))) and (v245==(1 + 0))) then v129=1076 -(615 + 459);break;end end break;end end end if ((v129==(2 -0)) or (2032<=(316 + 826))) then for v251=v130,v67 do local v252=0;local v253;local v254;while true do if ((v252==(1071 -(187 + 393 + 490))) or (728<=(471 + 178))) then while true do if (((1476 -(12 + 268))>(26 + 3)) and (v253==(1747 -(891 + 856)))) then v254=0;while true do if (((4523 -(255 + 1381 + 360))<(18107 -13161)) and (v254==(60 -((113 -55) + 2)))) then v133=v133 + (2 -1);v80[v251]=v131[v133];break;end end break;end end break;end if ((v252==(0 + 0)) or (3293>(4706 -(406 + 420)))) then v253=0 -0;v254=nil;v252=69 -(13 + 55);end end end break;end end break;end end break;end if (((7902 -6319)<(4945 -2978)) and (2==v127)) then v132=nil;v133=nil;v127=1742 -(1346 + 393);end if ((3689==(5497 -1808)) and (v127==0)) then v128=82 -(63 + 19);v129=nil;v127=1010 -(851 + 158);end end end elseif (((3029 -(530 + 85 + 0))>(1998 -((2490 -(615 + 579)) + 330 + 103))) and (v83<=(1 + 10))) then if ((v83<=(72 -(62 + 1))) or ((2002 -725)>=3520)) then if ((1458==(2992 -(67 + 1467))) and (v83>((6 -3) + 5))) then local v134=0;local v135;while true do if ((463==463) and (v134==(0 -0))) then v135=v82[(535 + 708) -(972 + (1774 -(169 + 1336)))];v80[v135]=v80[v135]();break;end end else v80[v82[2]]=v82[3 -0];end elseif ((v83==(3 + 7)) or ((953 + 525)<(24 -(6 + 1)))) then local v137=0 + (626 -(320 + 306));local v138;while true do if (((7258 -4129)==((861 + 3111) -(148 + (1666 -(960 + 11))))) and (v137==(0 + 0))) then v138=v82[2];v80[v138](v12(v80,v138 + 1,v82[2 + 1]));break;end end else local v139=902 -(715 + 187);local v140;local v141;local v142;while true do if ((v139==((3 -1) + 0)) or ((5338 -2971)>(490 + 3176))) then for v197=1,v82[4] do local v198=425 -(254 + 171);local v199;local v200;local v201;while true do if (((423 -(268 + 155))==v198) or (3311==(7335 -4600))) then v199=0 -0;v200=nil;v198=1 + 0;end if (((153 + 55)==(486 -(253 + 25))) and (v198==1)) then v201=nil;while true do if ((v199==(1794 -(910 + 883))) or ((12079 -7658)>=(12280 -7611))) then while true do if ((v200==(2 -1)) or ((551 + 1713)<=(3186 -1887))) then if ((v201[553 -(504 + 48)]==(38 -21)) or (383>(1470 -(636 + 444)))) then v142[v197-(19 -(5 + 13))]={v80,v201[917 -(766 + 148)]};else v142[v197-(4 -3)]={v35,v201[3]};end v79[ #v79 + 1]=v142;break;end if (((7240 -4324)<=((28535 -13323) -11225)) and (v200==(0 -0))) then local v267=1632 -(85 + 1547);local v268;while true do if ((1052==(771 + 281)) and (v267==(1792 -(812 + 980)))) then v268=397 -(307 + (415 -325));while true do if ((v268==((177 -(78 + 98)) + (1806 -(6 + 1800)))) or ((5256 -(451 + 29 + 37))>=4991)) then v200=(1064 -(795 + 266)) -2;break;end if (((9295 -7381)==(483 + 1431)) and (v268==(0 -(1393 -(993 + 400))))) then local v289=0;while true do if ((v289==(345 -(78 + 267))) or ((2624 -(854 + 4))<=(1355 -802))) then v66=v66 + (1682 -(342 + 1339));v201=v73[v66];v289=775 -(537 + 237);end if (((15 + 1)<=(12864 -8117)) and (1==v289)) then v268=1 -0;break;end end end end break;end end end end break;end if (((778 -352)<=((4417 + 404) -(54 + 19))) and (v199==(0 + 0))) then local v255=0;while true do if (((1 + 0)==v255) or ((7285 -5595)<(533 + 506))) then v199=1 + (0 -0);break;end if ((v255==((794 -(303 + 491)) -0)) or ((10804 -8563)<(2043 -(295 + 171)))) then v200=225 -(44 + 181);v201=nil;v255=4 -3;end end end end break;end end end v80[v82[4 -(2 + 0)]]=v29(v140,v141,v36);break;end if ((v139==(0 -0)) or ((998 -306)==(2744 -(2249 -(342 + 564))))) then local v194=0 + 0;while true do if (((3720 -(625 + 706))>=(674 + 946 + 191)) and (v194==(1784 -(887 + 896)))) then v139=489 -(198 + 290);break;end if ((v194==(0 -0)) or (696<(1204 -690))) then v140=v75[v82[1579 -(787 + 789)]];v141=nil;v194=1 + 0;end end end if ((v139==(2 -1)) or ((189 + 1377)<(3238 -2361))) then local v195=0 -(423 -(324 + 99));while true do if ((v195==((2311 -(403 + 1200)) -(183 + 524))) or (4009<=(3560 -(12 + 101)))) then v139=5 -3;break;end if (((4537 -2583)==(6314 -4360)) and (v195==(0 -0))) then v142={};v141=v9({},{__index=function(v220,v221)local v232=(0 -0) + 0;local v233;local v234;while true do if (((1740 + 504)>=(161 + 12)) and (v232==(0 -0))) then v233=0 + 0;v234=nil;v232=1 + (0 -0);end if ((v232==(2 -1)) or ((5657 -(168 + 1378))<(10327 -6662))) then while true do if ((v233==0) or ((4096 -(459 + 43))<=(7128 -4904))) then local v270=(3405 -1514) -(1049 + 842);while true do if ((v270==0) or ((8765 -5580)<((857 -321) -(27 + 171)))) then v234=v142[v221];return v234[1 + 0][v234[2 + 0]];end end end end break;end end end,__newindex=function(v222,v223,v224)local v235=895 -(36 + 859);local v236;local v237;while true do if ((v235==1) or (723>(3796 -(444 + 438)))) then while true do if ((((787 -490) + 921)==(151 + 1067)) and (v236==(0 -0))) then v237=v142[v223];v237[1 + 0][v237[5 -3]]=v224;break;end end break;end if ((v235==(0 + 0 + 0)) or ((2155 + 698)<=(459 + 2369))) then v236=0 + 0;v237=nil;v235=1 + (0 -0);end end end});v195=1 + 0;end end end end end elseif (((3907 -2384)>=(829 + 507)) and (v83<=((15 -5) + 3))) then if ((v83==(2 + 10)) or ((6797 -2567)<=(3034 -(679 + 880)))) then v80[v82[(1 + 1) -0]]=v82[93 -(66 + 24)]~=(964 -(596 + 368));else local v144=(165 -(24 + 141)) -0;local v145;local v146;local v147;while true do if ((v144==0) or ((13743 -9826)==(33 + 1217))) then v145=703 -(119 + 584);v146=nil;v144=2 -1;end if ((v144==((1820 -(288 + 267)) -(41 + (1527 -(133 + 171))))) or ((4520 -(93 + 97))==(4490 -((1817 -(1280 + 459)) + 702)))) then v147=nil;while true do if ((((268 -181) + 3076)==(3055 + 108)) and (v145==(1005 -(381 + 624)))) then local v210=0 -0;while true do if ((v210==(0 + 0)) or ((4622 -3245)>=(7213 -4219))) then v146=0 + (1949 -(1725 + 224));v147=nil;v210=1398 -(288 + 1104 + 5);end if (((640 + (2785 -852))<=(9455 -5938)) and (v210==(1672 -(300 + 1371)))) then v145=1;break;end end end if ((v145==1) or ((3766 -(220 + 27 + 971))>=(3128 -(60 + 93)))) then while true do if ((v146==0) or ((2787 -(1566 + 177))>=(3711 -(197 + 8)))) then v147=v82[1498 -(1120 + 376)];v80[v147]=v80[v147](v12(v80,v147 + 1,v82[3]));break;end end break;end end break;end end end elseif ((v83>(1397 -((1281 -455) + 557))) or ((5180 -(381 + 141))<=(1495 + 386))) then v80[v82[2 + 0]]={};else local v149=0 + 0;local v150;local v151;local v152;local v153;while true do if ((551<=(758 + 1717)) and (v149==(0 + 0))) then local v196=0 -0;while true do if ((v196==(3 -(1770 -(944 + 824)))) or (((15585 -10918) -(664 + 862))==(2983 -(1375 + 566 + 2)))) then v149=1;break;end if ((v196==(543 -(75 + (1038 -(118 + 452))))) or ((1859 + 1674)>=4150)) then v150=v82[(2132 -(1205 + 578)) -(342 + 5)];v151,v152=v77(v80[v150](v12(v80,v150 + (2 -1),v82[955 -(355 + 597)])));v196=1397 -(501 + 895);end end end if (((1003 + 3737)>=(285 + 224 + 951)) and (v149==(3 -1))) then for v202=v150,v67 do local v203=737 -(498 + 239);local v204;while true do if (((71 + 53)<=(9341 -6799)) and ((0 -0)==v203)) then v204=911 -(57 + 226 + 628);while true do if ((v204==(868 -(124 + 744))) or (((1592 + 3327) -(342 + 34))<(3095 -2019))) then v153=v153 + 1;v80[v202]=v151[v153];break;end end break;end end end break;end if ((v149==(1 + 0)) or ((604 + 324)>(6298 -1817))) then v67=(v152 + v150) -(1 + 0);v153=0 + 0;v149=2;end end end elseif (((323 + 308)<(9706 -5089)) and (v83<=(16 + 7))) then if ((v83<=((92 -56) -17)) or ((533 -(536 -257))>3606)) then if ((3585>=((16149 -12622) -2085)) and (v83<=(12 + 5))) then if ((v83==(74 -58)) or ((414 + 2600)<(3685 -(878 + 84)))) then v80[v82[1 + 1]]=v35[v82[3 -0]];else v80[v82[1573 -(288 + 1283)]]=v80[v82[8 -5]];end elseif ((4660>((3600 + 3344) -4379)) and (v83==(53 -35))) then for v179=v82[1 + 1],v82[3 + 0] do v80[v179]=nil;end else local v156=267 -(161 + 106);local v157;local v158;local v159;local v160;while true do if (((8321 -4311)<=(13354 -8536)) and (v156==0)) then v157=0 + 0;v158=nil;v156=1 + 0;end if ((((4440 -(75 + 83)) -((815 -482) + 184))>=(944 -(1722 -1154))) and (v156==(1806 -(1636 + 168)))) then while true do if ((v157==(123 -(101 + 21))) or (((2933 -(430 + 877)) + 484)>2621)) then v160=v80[v158 + (1261 -(1226 + 33))];if ((4550<(2090 + 2780)) and (v160>(0 + 0))) then if ((1869<=(2273 + 2254)) and (v159>v80[v158 + 1])) then v66=v82[14 -(1167 -(841 + 315))];else v80[v158 + (1973 -(1255 + 715))]=v159;end elseif ((((1484 + 1598) -(19 + 25 + 95))>(1763 -(135 + 266))) and (v159<v80[v158 + 1])) then v66=v82[3];else v80[v158 + 1 + 2]=v159;end break;end if (((3749 -(1067 + 688))<=(2829 -(442 + 145))) and ((751 -(7 + 744))==v157)) then local v211=0;while true do if ((v211==(1548 -(1198 + 350))) or ((4248 -3076)==((3512 -1181) -(58 + 1881)))) then v158=v82[5 -3];v159=v80[v158];v211=1;end if ((v211==(1535 -(1455 + (1355 -(1194 + 82))))) or ((3197 -(78 + 187))<(9585 -7472))) then v157=1 + (0 -0);break;end end end end break;end if (((1697 + 70)>(1880 -(76 + 64))) and (v156==(413 -(181 + 231)))) then v159=nil;v160=nil;v156=1408 -(1108 + 298);end end end elseif (((2846 -1713)==(4294 -3161)) and (v83<=(51 -30))) then if ((v83==(1 + 19)) or ((12760 -8912)<(1387 -((1420 -1047) + 101)))) then if ((v82[4 -2]==v80[v82[1255 -(685 + 566)]]) or ((1389 -(47 + 95))>(3284 -(1249 + 218)))) then v66=v66 + (1099 -((348 -(72 + 73)) + 895));else v66=v82[3];end else v80[v82[2 + 0]][v82[3]]=v80[v82[(3 + 3) -2]];end elseif ((v83>22) or (35>(3365 -785))) then v80[v82[505 -(455 + 48)]]=v80[v82[1493 -(1164 + 326)]][v82[12 -8]];else v80[v82[1499 -(194 + 1303)]]=v80[v82[1 + 2]][v80[v82[4 + 0]]];end elseif (((4261 -(403 + 77))<4239) and (v83<=27)) then if ((v83<=25) or ((282 + 878)>=(1399 + 72))) then if ((v83>24) or ((598 + 1105)>(3159 -(934 + 483)))) then v80[v82[173 -(90 + (129 -48))]]=v36[v82[3]];else v66=v82[8 -5];end elseif ((v83==(84 -58)) or (356>=1521)) then local v165=0 + 0;local v166;local v167;local v168;local v169;while true do if ((v165==1) or ((33 + 174)>(3834 -(944 + 554)))) then v168=nil;v169=nil;v165=2 -0;end if ((1658<=(1752 + 1562)) and (v165==(1230 -(292 + 938)))) then v166=0 -0;v167=nil;v165=1;end if ((v165==(8 -6)) or (3830>(4122 + 184))) then while true do if ((v166==(1 -0)) or (3352>=(11858 -7512))) then v169=v82[3];for v225=1,v169 do v168[v225]=v80[v167 + v225];end break;end if (((0 -0)==v166) or (1863>(2329 + 2560))) then local v212=(899 -(631 + 268)) + 0;while true do if ((v212==(2 -(2 -1))) or (3824<=(4722 -(387 + 1177)))) then v166=1;break;end if ((3187==(7126 -3939)) and (v212==(495 -(194 + 301)))) then v167=v82[2];v168=v80[v167];v212=407 -(386 + (1733 -(379 + 1334)));end end end end break;end end else do return;end end elseif (((2603 -(77 + 50 + 101))>=(940 + 32)) and (v83<=(2 + 27))) then if (((4296 -((2134 -1269) + 48))==((2677 -(423 + 460)) + 1589)) and (v83>28)) then local v170=0;local v171;local v172;local v173;while true do if ((v170==(944 -((1503 -(664 + 468)) + 572))) or ((53 + (1762 -(1211 + 376)))>(3638 -(12 + 9)))) then v173=nil;while true do if ((v171==(1974 -(579 + 1395))) or ((1394 + 3146)>(6637 -(1507 + 247)))) then local v213=0 + 0;while true do if (((953 + 693)>=(207 + 1)) and (v213==(0 -0))) then v172=0 -0;v173=nil;v213=2 -1;end if (((2498 -(421 + 628))<(1194 + 3469)) and (v213==1)) then v171=1 + 0;break;end end end if ((v171==(1915 -(209 + 1130 + (1467 -892)))) or ((4816 -(477 + 130))<3408)) then while true do if (((164 + 2699)==(1243 + 1620)) and (v172==(0 + 0 + 0))) then v173=v82[2];v80[v173](v80[v173 + (1 -0)]);break;end end break;end end break;end if ((v170==(0 -0)) or (1181>=3609)) then v171=0;v172=nil;v170=1 -0;end end else v80[v82[2]]=v29(v75[v82[(1609 -(1447 + 160)) + 1]],nil,v36);end elseif (((3987 + 779)>=(1831 -(36 + 79))) and (v83<=(1701 -(520 + 1151)))) then local v175=0 + (1223 -(1012 + 211));local v176;local v177;local v178;while true do if (((588 + 1409)==((425 + 2432) -860)) and (v175==(1796 -(1686 + 110)))) then v176=0 -(0 -0);v177=nil;v175=1658 -(712 + (2160 -1215));end if ((1512>(1151 -500)) and (v175==(1854 -(713 + 1140)))) then v178=nil;while true do if ((v176==(0 -(125 -(12 + 113)))) or ((3237 -(699 + 1058))<((3197 -(581 + 1337)) -(319 + 541)))) then local v214=0;while true do if ((v214==(2 -1)) or ((1466 -(536 + 348))>=2311)) then v176=(112 + 505) -(258 + 358);break;end if ((v214==0) or (1235==(2126 -1490))) then v177=v82[3 -1];v178={};v214=1 + 0;end end end if ((v176==(2 -1)) or (2049==568)) then for v227=1, #v79 do local v228=1973 -(583 + 1390);local v229;local v230;local v231;while true do if ((3106>(2475 -((3136 -2055) + 363))) and ((0 -0)==v228)) then v229=0;v230=nil;v228=1 -0;end if ((v228==(1 + 0)) or ((1941 -(464 + 321))>(7610 -4691))) then v231=nil;while true do if (((433 + 2021)<=(14112 -10350)) and (v229==(812 -(767 + 45)))) then local v269=0 -(0 -0);while true do if (((1003 + (3029 -1186))==(1049 + 1797)) and (v269==(0 + 0))) then v230=0;v231=nil;v269=1;end if ((v269==(1470 -(575 + 678 + 216))) or (1131==(1677 + 1240))) then v229=1 + 0;break;end end end if ((v229==(2 -1)) or ((1118 -(58 + 540))>(723 + 2522))) then while true do if ((959<(125 + 2902)) and (v230==(1884 -(1795 + 89)))) then v231=v79[v227];for v278=0, #v231 do local v279=0 -0;local v280;local v281;local v282;local v283;while true do if (((724 + 2769)<=(5600 -(1403 + 355))) and (v279==0)) then v280=263 -(77 + 186);v281=nil;v279=1;end if (((1064 -(833 + (588 -359)))==v279) or (3618<=1595)) then while true do if ((v280==(1586 -(264 + 1321))) or ((1808 -(128 + 1275))>(5380 -(924 + 853)))) then v283=v281[1578 -(846 + 730)];if (((2410 + 1731)==(5411 -(894 + 376))) and (v282==v80) and (v283>=v177)) then local v293=0;local v294;while true do if (((7695 -5449)<(3724 -(53 + 680))) and (v293==((0 + 0) -0))) then v294=0 -(0 -0);while true do if ((952==(4103 -3151)) and ((1099 -(768 + 331))==v294)) then v178[v283]=v282[v283];v281[1]=v178;break;end end break;end end end break;end if ((1785>=1400) and (v280==(0 + 0))) then local v290=0;while true do if ((v290==(1222 -(680 + 541))) or ((1797 + 1731)>(1104 + 3096))) then v280=390 -((673 -463) + 179);break;end if ((4992==(18414 -13422)) and (v290==(0 -0))) then v281=v231[v278];v282=v281[3 -2];v290=3 -2;end end end end break;end if (((372 + 1179)>=(726 + 125)) and (v279==(1 + 0))) then v282=nil;v283=nil;v279=(5 -3) + 0;end end end break;end end break;end end break;end end end break;end end break;end end elseif ((v83>31) or (((4910 -(170 + 239)) -(170 + 4))<(1023 + 2071))) then local v183=0 + 0;local v184;local v185;local v186;while true do if ((v183==(470 -(212 + 258))) or ((282 + 2113)==(193 + 1524))) then v184=0 + (0 -0);v185=nil;v183=1;end if (((4107 -(80 + 1078))>=(2953 -(488 + 838))) and (v183==1)) then v186=nil;while true do if (((1191 -(867 + 199))<(1708 + 771)) and (v184==0)) then v185=v82[2];v186=v80[v82[3]];v184=1 + 0;end if (((9857 -5751)<=(25 + 4670)) and (v184==1)) then v80[v185 + 1 + 0 + 0]=v186;v80[v185]=v186[v82[1 + 3]];break;end end break;end end else local v187=0 -(0 -0);local v188;local v189;local v190;local v191;while true do if (((7869 -5070)<3677) and (v187==(0 + 0))) then v188=0 -0;v189=nil;v187=1007 -(383 + 623);end if ((v187==2) or ((1600 + 2532)<=((7591 -(575 + 1184)) -(225 + 1521)))) then while true do if (((729 -219)<=3616) and (v188==0)) then local v240=0 -0;while true do if ((v240==0) or (2367>((2821 + 2793) -(376 + 544)))) then v189=0 + 0;v190=nil;v240=1913 -(1004 + 908);end if ((v240==1) or ((5060 -(918 + 598))<=(2863 + 312))) then v188=906 -(731 + 174);break;end end end if ((1820<(4709 -(1297 + 6))) and (v188==1)) then v191=nil;while true do if ((2561>((2371 -(1507 + 468)) + 360)) and (v189==1)) then for v261=v190 + 1 + (0 -0),v82[5 -2] do v7(v191,v80[v261]);end break;end if ((v189==((4870 -3574) -(586 + 710))) or (((10760 + 10420) -16676)<(4630 -(161 + 28)))) then local v259=(45 + 4) -(25 + 24);local v260;while true do if ((v259==(1580 -(286 + 1294))) or ((517 + 1007)>=4897)) then v260=0 -0;while true do if ((4695>=2444) and (v260==(0 -(0 + 0)))) then local v284=0 -0;while true do if ((3772>=(3830 -(56 + 936))) and (v284==(490 -(388 + 102)))) then v190=v82[2 + 0];v191=v80[v190];v284=1;end if ((v284==(1 + 0)) or ((2403 + 932)==((680 + 994) -(116 + 59)))) then v260=1 + 0;break;end end end if ((v260==(1 + 0)) or ((4346 -(321 + (1211 -581)))>(1001 + 2899))) then v189=905 -(234 + 670);break;end end break;end end end end break;end end break;end if (((1722 + 37)>(187 + 255)) and (v187==(353 -(24 + 328)))) then v190=nil;v191=nil;v187=5 -(4 -1);end end end v66=v66 + 1;break;end end break;end end end end A,B=v27(v10(v70));if  not A[1] then local v84=v34[4][v66] or "?";error("Script error at ["   .. v84   .. "]:"   .. A[2]);else return v12(A,2,B);end end;end return v29(v28(),{},v16)();end if (v17==4) then v27=nil;function v27(...)return {...},v11("#",...);end v28=nil;function v28()local v47=0;local v48;local v49;local v50;local v51;local v52;local v53;local v54;local v55;while true do if (v47==0) then v48=839 -(377 + 462);v49=nil;v47=1 + 0;end if ((2 -1)==v47) then v50=nil;v51=nil;v47=2 + 0;end if (4==v47) then while true do if (v48==(2 + 0)) then local v89=0;while true do if (v89==0) then v53=nil;v54=nil;v89=3 -2;end if (v89==(3 -2)) then v48=269 -(190 + 76);break;end end end if (v48~=(0 -0)) then else local v90=0;while true do if (v90~=(485 -(212 + 273))) then else v49=0;v50=nil;v90=1 + 0;end if (v90==(1 + 0)) then v48=1;break;end end end if (v48~=(2 -1)) then else local v91=0;while true do if (v91==1) then v48=2;break;end if (v91~=(0 + 0)) then else v51=nil;v52=nil;v91=1 + 0;end end end if (v48==(4 -1)) then v55=nil;while true do local v94=0 -0;local v95;while true do if (v94==(0 + 0)) then v95=122 -(50 + 72);while true do if (v95~=(0 + 0)) then else if ((1 + 1)==v49) then local v96=709 -(5 + 704);while true do if (v96~=(2 -1)) then else for v104=1 + 0,v23() do v52[v104]=v23();end return v53;end if (v96==(1595 -(1569 + 26))) then for v106=537 -(177 + 359),v23() do local v107=0 + 0;local v108;local v109;while true do if (v107==1) then while true do if (v108==0) then v109=v21();if (v20(v109,1 + 0,1 + 0)==(0 -0)) then local v215=0 -0;local v216;local v217;local v218;local v219;while true do if (v215==(4 -3)) then v218=nil;v219=nil;v215=4 -2;end if (0==v215) then v216=0 -0;v217=nil;v215=1;end if ((5 -3)==v215) then while true do if (v216==(3 -1)) then local v262=0 + 0;while true do if (v262==(0 + 0)) then if (v20(v218,3 -2,517 -(174 + 342))==(455 -(73 + 381))) then v219[2]=v55[v219[2]];end if (v20(v218,8 -6,4 -2)~=(3 -2)) then else v219[1651 -(152 + 1496)]=v55[v219[888 -(630 + 255)]];end v262=1 + 0;end if (v262~=(1 + 0)) then else v216=5 -2;break;end end end if (v216==(3 + 0)) then if (v20(v218,4 -1,3)~=(2 -1)) then else v219[10 -6]=v55[v219[461 -(71 + 386)]];end v50[v106]=v219;break;end if (v216==(4 -3)) then local v264=867 -(178 + 689);local v265;while true do if (v264==(0 -0)) then v265=0 -0;while true do if (v265==1) then v216=2;break;end if (v265==0) then local v287=606 -(343 + 263);while true do if (v287==1) then v265=2 -1;break;end if (v287==(0 -0)) then v219={v22(),v22(),nil,nil};if (v217==(0 + 0)) then local v291=0 + 0;local v292;while true do if (v291==(0 + 0)) then v292=0;while true do if (v292==(0 -0)) then v219[2 + 1]=v22();v219[4]=v22();break;end end break;end end elseif (v217==(369 -(356 + 12))) then v219[1147 -(1061 + 83)]=v23();elseif (v217==(1 + 1)) then v219[11 -8]=v23() -((1867 -(923 + 942))^16);elseif (v217==(1239 -(465 + 771))) then local v299=0 + 0;local v300;local v301;local v302;while true do if ((1 + 0)==v299) then v302=nil;while true do if (0~=v300) then else local v305=0 + 0;while true do if (v305==(946 -(336 + 610))) then v301=0 + 0;v302=nil;v305=550 -(223 + 326);end if (1~=v305) then else v300=1 + 0;break;end end end if (v300==(1824 -(137 + 1686))) then while true do if (v301~=(0 + 0)) then else v302=0;while true do if ((0 + 0)==v302) then v219[11 -8]=v23() -((317 -(107 + 208))^(32 -16));v219[1824 -(1018 + 802)]=v22();break;end end break;end end break;end end break;end if (v299~=(0 + 0)) then else v300=1066 -(352 + 714);v301=nil;v299=1 + 0;end end end v287=1616 -(374 + 1241);end end end end break;end end end if ((0 -0)~=v216) then else v217=v20(v109,1 + 1,1614 -(926 + 685));v218=v20(v109,17 -13,14 -8);v216=1;end end break;end end end break;end end break;end if (v107==(0 + 0)) then v108=0 + 0;v109=nil;v107=834 -(822 + 11);end end end for v110=1 -0,v23() do v51[v110-(779 -(6 + 772))]=v28();end v96=1 + 0;end end end if (v49==(2 -1)) then v54=v23();v55={};for v99=1,v54 do local v100=0 + 0;local v101;local v102;local v103;while true do if (v100==1) then v103=nil;while true do if ((1 -0)==v101) then if (v102==(1896 -(1083 + 812))) then v103=v21()~=(0 + 0);elseif (v102==(3 -1)) then v103=v24();elseif (v102~=3) then else v103=v25();end v55[v99]=v103;break;end if (v101==(0 -0)) then local v182=0;while true do if (v182~=0) then else v102=v21();v103=nil;v182=3 -2;end if (v182~=1) then else v101=1 -0;break;end end end end break;end if (v100~=(0 + 0)) then else v101=0;v102=nil;v100=1 -0;end end end v53[289 -(267 + 19)]=v21();v49=2;end v95=1 + 0;end if (v95==(1 + 0)) then if (v49~=(0 + 0)) then else local v98=0 -0;while true do if (v98==(0 -0)) then v50={};v51={};v98=1;end if (v98~=(1 -0)) then else v52={};v53={v50,v51,nil,v52};v98=1 + 1;end if (v98~=(8 -6)) then else v49=1153 -(923 + 229);break;end end end break;end end break;end end end break;end end break;end if (v47~=3) then else v54=nil;v55=nil;v47=9 -5;end if (v47~=2) then else v52=nil;v53=nil;v47=3;end end end v17=5;end if (v17==2) then function v22()local v56,v57=v1(v15,v18,v18 + (3 -1));v18=v18 + (118 -(112 + 4));return (v57 * (105 + 151)) + v56;end v23=nil;function v23()local v58,v59,v60,v61=v1(v15,v18,v18 + ((8 + 1) -6));v18=v18 + 4 + 0;return (v61 * ((13232683 + 3544832) -(163 + 136))) + (v60 * (6898 + 5125 + 53513)) + (v59 * (1175 -919)) + v58;end v24=nil;v17=3;end if (v17==0) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v37)if (v1(v37,2)==79) then local v71=0;while true do if (v71==0) then v19=v0(v3(v37,1,1));return "";end end else local v72=v2(v0(v37,16));if v19 then local v85=v5(v72,v19);v19=nil;return v85;else return v72;end end end);v20=nil;v17=1;end end end vv8());end
