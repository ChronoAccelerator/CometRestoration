do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=1;local v18;v15=v4(v3(v15,5),"..",function(v29)if (v1(v29,2)==79) then v18=v0(v3(v29,1,1));return "";else local v63=v2(v0(v29,16));if v18 then local v67=v5(v63,v18);v18=nil;return v67;else return v63;end end end);local function v19(v30,v31,v32)if v32 then local v64=0 + (1743 -(796 + 947));local v65;while true do if (v64==(0 -0)) then v65=(v30/((1 + 1)^(v31-(1 + 0))))%((2 + 0)^(((v32-((1111 -(566 + 543)) -1)) -(v31-(1784 -(54 + 1729)))) + 1));return v65-(v65%(1 -0));end end else local v66=(7 -5)^(v31-1);return (((v30%(v66 + v66))>=v66) and 1) or (0 + 0);end end local function v20()local v37=v1(v15,v17,v17);v17=v17 + 1;return v37;end local function v21()local v38=0 -0;local v39;local v40;while true do if (v38==(817 -(404 + 413))) then v39,v40=v1(v15,v17,v17 + (1728 -(747 + 979)));v17=v17 + (3 -1);v38=2 -1;end if (v38==(3 -2)) then return (v40 * (527 -(116 + 155))) + v39;end end end local function v22()local v41,v42,v43,v44=v1(v15,v17,v17 + (7 -4));v17=v17 + 4;return (v44 * (16777773 -(537 + 20))) + (v43 * 65536) + (v42 * (361 -105)) + v41;end local function v23()local v45=v22();local v46=v22();return (( -(2 + 0) * v19(v46,31 + 1)) + (1948 -(285 + 1662))) * ((2 -(0 -0))^(v19(v46,30 -9,4 + 27) -1023)) * ((((v19(v46,(590 -(125 + 464)) -(0 -0),20) * ((2 + 0)^(1144 -(882 + 230)))) + v45)/((1 + 1)^(1237 -(573 + 612)))) + (2 -1));end local function v24(v33)local v47;if  not v33 then v33=v22();if (v33==(0 + 0)) then return "";end end v47=v3(v15,v17,(v17 + v33) -1);v17=v17 + v33;local v48={};for v61=302 -(280 + 21), #v47 do v48[v61]=v2(v1(v3(v47,v61,v61)));end return v6(v48);end local v25=v22;local function v26(...)return {...},v11("#",...);end local function v27()local v49=0 + 0;local v50;local v51;local v52;local v53;local v54;local v55;local v56;while true do if (v49==(2 -0)) then v54=nil;v55=nil;v49=2 + 1;end if (v49==(0 -0)) then v50=0 -0;v51=nil;v49=1 + 0;end if (v49~=(7 -4)) then else v56=nil;while true do local v68=0 -0;while true do if (v68~=(0 + 0)) then else if (v50~=(725 -(455 + 268))) then else local v89=0 -0;while true do if (v89~=(831 -(117 + 714))) then else for v96=1 + 0,v22() do local v97=716 -(73 + 643);local v98;local v99;local v100;while true do if (v97==1) then v100=nil;while true do if (v98~=1) then else while true do if (v99~=(0 -0)) then else v100=v20();if (v19(v100,2 -1,999 -(857 + 141))==(0 -0)) then local v118=0 + 0;local v119;local v120;local v121;local v122;while true do if (v118==(3 -1)) then while true do if (v119==(1697 -(1467 + 230))) then local v209=0;while true do if (v209~=(0 + 0)) then else v120=v19(v100,12 -(4 + 6),3 + 0);v121=v19(v100,4,6);v209=1;end if (v209==(1 + 0)) then v119=1;break;end end end if (v119==(1683 -(249 + 1431))) then if (v19(v121,91 -(78 + 10),1 + 2)==(1 + 0)) then v122[4]=v56[v122[596 -(466 + 126)]];end v51[v96]=v122;break;end if (v119==(1 + 0)) then local v211=1320 -(1311 + 9);while true do if (v211==(0 -0)) then local v242=0 + 0;while true do if (v242==(654 -(454 + 200))) then v122={v21(),v21(),nil,nil};if (v120==(0 -0)) then local v268=0 + 0;local v269;while true do if (v268~=(0 -0)) then else v269=0 + 0;while true do if ((1652 -(679 + 973))==v269) then v122[1 + 2]=v21();v122[4 + 0]=v21();break;end end break;end end elseif (v120==(4 -3)) then v122[6 -3]=v22();elseif (v120==(2 + 0)) then v122[357 -(10 + 344)]=v22() -((1 + 1)^(14 + 2));elseif (v120==(3 + 0)) then local v289=1708 -(1119 + 589);local v290;local v291;while true do if (v289==(1278 -(521 + 757))) then v290=0 -0;v291=nil;v289=1 + 0;end if (v289~=(1 + 0)) then else while true do if (0==v290) then v291=631 -(412 + 219);while true do if (0==v291) then v122[4 -1]=v22() -((545 -(169 + 374))^(53 -37));v122[15 -11]=v21();break;end end break;end end break;end end end v242=1;end if (v242~=(1565 -(1391 + 173))) then else v211=4 -3;break;end end end if (v211==(153 -(140 + 12))) then v119=1 + 1;break;end end end if (v119==2) then local v212=1895 -(1757 + 138);while true do if (v212==(1 + 0)) then v119=245 -(185 + 57);break;end if (v212~=(0 + 0)) then else if (v19(v121,2 -1,1048 -(896 + 151))~=(1 -0)) then else v122[2 + 0]=v56[v122[2]];end if (v19(v121,6 -4,1 + 1)==(1276 -(830 + 445))) then v122[1974 -(1422 + 549)]=v56[v122[38 -(23 + 12)]];end v212=1;end end end end break;end if (v118==1) then v121=nil;v122=nil;v118=1893 -(1200 + 691);end if ((0 + 0)==v118) then local v199=561 -(57 + 504);while true do if ((0 + 0)~=v199) then else v119=0 -0;v120=nil;v199=2 -1;end if (v199==(1 + 0)) then v118=4 -3;break;end end end end end break;end end break;end if (v98==(0 -0)) then local v116=0;while true do if (v116~=(1908 -(1480 + 428))) then else v99=0 + 0;v100=nil;v116=507 -(41 + 465);end if (v116~=1) then else v98=1 -0;break;end end end end break;end if (v97==(0 + 0)) then v98=0 + 0;v99=nil;v97=1 + 0;end end end for v101=1,v22() do v52[v101-(1 + 0)]=v27();end v89=1 + 0;end if (v89==(1 + 0)) then for v103=1 + 0,v22() do v53[v103]=v22();end return v54;end end end if (v50==(0 + 0)) then local v90=0;local v91;while true do if (v90~=0) then else v91=0;while true do if (v91~=(2 + 0)) then else v50=536 -(344 + 191);break;end if (v91==(1 -0)) then local v106=0;while true do if (v106==0) then v53={};v54={v51,v52,nil,v53};v106=1 + 0;end if ((1 + 0)==v106) then v91=2;break;end end end if (v91==(0 + 0)) then local v107=0 -0;while true do if (v107==1) then v91=1;break;end if (v107==(0 + 0)) then v51={};v52={};v107=1;end end end end break;end end end v68=1 + 0;end if (v68==(2 -1)) then if ((3 -2)==v50) then local v92=0;local v93;while true do if (v92==(0 + 0)) then v93=1257 -(414 + 843);while true do if (v93==(1400 -(783 + 616))) then for v109=1 + 0,v55 do local v110=0 + 0;local v111;local v112;local v113;local v114;while true do if ((2 -1)==v110) then v113=nil;v114=nil;v110=1482 -(108 + 1372);end if ((1444 -(1101 + 341))~=v110) then else while true do if (v111==(17 -(9 + 8))) then local v117=0 + 0;while true do if (v117==(1 + 0)) then v111=1821 -(327 + 1493);break;end if (v117~=0) then else v112=0;v113=nil;v117=1 + 0;end end end if (v111==(574 -(185 + 388))) then v114=nil;while true do if (v112~=(2 -1)) then else if (v113==(2 -1)) then v114=v20()~=(0 + 0);elseif (v113==2) then v114=v23();elseif (v113==(1705 -(1321 + 381))) then v114=v24();end v56[v109]=v114;break;end if (v112~=(0 -0)) then else v113=v20();v114=nil;v112=1 + 0;end end break;end end break;end if ((0 + 0)==v110) then v111=1933 -(320 + 1613);v112=nil;v110=1 + 0;end end end v54[5 -2]=v20();v93=1 + 1;end if (v93==2) then v50=4 -2;break;end if (v93~=(0 + 0)) then else v55=v22();v56={};v93=1;end end break;end end end break;end end end break;end if ((1 -0)==v49) then v52=nil;v53=nil;v49=2;end end end local function v28(v34,v35,v36)local v57=0;local v58;local v59;local v60;while true do if (v57==1) then v60=v34[3];return function(...)local v69=1;local v70= -1;local v71={...};local v72=v11("#",...) -1;local function v73()local v74=v58;local v75=Const;local v76=v59;local v77=v60;local v78=v26;local v79={};local v80={};local v81={};for v86=0 + 0,v72 do if ((v86>=v77) or ((13361 -9647)>3821)) then v79[v86-v77]=v71[v86 + (554 -(348 + 205))];else v81[v86]=v71[v86 + 1 + 0];end end local v82=(v72-v77) + (1354 -(917 + 436));local v83;local v84;while true do local v87=0 -0;local v88;while true do if (((10120 -5581)>((2125 -(308 + 989)) + 2214)) and (v87==((0 -0) -0))) then v88=0 -0;while true do if ((v88==((1436 -(902 + 534)) -0)) or ((1322 + 293)>=(18687 -14273))) then local v105=0;while true do if ((v105==(1 + 0)) or (((7433 -5626) -836)>=(4050 -2599))) then v88=1;break;end if ((333>=(344 -(231 + 111))) and (v105==(0 + 0))) then local v115=0 -0;while true do if ((v115==(1763 -(790 + 973))) or ((6066 -(1680 + 71))<1177)) then v83=v74[v69];v84=v83[1];v115=3 -(1 + 1);end if (((3510 -(780 + 556))>=(1285 -845)) and (v115==(1 + 0))) then v105=1 + 0 + 0;break;end end end end end if ((v88==(1 + 0)) or (4938==((3538 -(330 + 1512)) -(20 + 1112)))) then if (((11703 -6909)>=(924 + 111)) and (v84<=(6 + 9))) then if (((11882 -7192)>3059) and (v84<=(7 + 0))) then if ((v84<=(5 -2)) or (2225==(1007 + 1590))) then if ((v84<=(1 + 0)) or (4628==(614 -(42 + 171)))) then if ((v84>((0 -0) -0)) or ((9423 -5965)<(9 + 87))) then local v123=430 -(66 + 364);local v124;local v125;local v126;while true do if ((v123==(3 -2)) or (501>=(5445 -3091))) then v126=nil;while true do if (((10511 -7777)==(471 + 2263)) and (v124==(1 + 0))) then v81[v125 + (3 -2) + 0]=v126;v81[v125]=v126[v83[698 -(666 + 28)]];break;end if ((v124==((765 -(398 + 367)) + 0)) or ((1801 + 1604)==(1983 -1227))) then v125=v83[2];v126=v81[v83[3 -0]];v124=1;end end break;end if ((v123==0) or ((766 -408)==2116)) then v124=0 + 0;v125=nil;v123=1 + 0;end end else local v127=0;local v128;local v129;while true do if ((1227==(4088 -2861)) and (v127==(2 -1))) then while true do if ((v128==(911 -(635 + 276))) or (((2366 -(491 + 546)) -958)>=(3455 -2067))) then v129=v83[2];v81[v129](v12(v81,v129 + (2 -1),v83[3]));break;end end break;end if (((4833 -(719 + 189))>=(559 + 157 + 215)) and ((0 -(0 -0))==v127)) then v128=116 -(41 + 75);v129=nil;v127=1 + 0;end end end elseif ((v84==(8 -6)) or ((4550 -(416 + 873))<(1645 + 1562))) then local v130=0;local v131;local v132;local v133;local v134;local v135;while true do if (((4105 -1064)>=(200 + 2642)) and ((730 -(291 + 437))==v130)) then v135=nil;while true do if ((v131==(0 -0)) or ((925 -449)>=((9347 -7086) -(364 + 591)))) then local v215=0 + 0;while true do if ((v215==(1 + 0)) or ((4736 -3215)>=(578 + 445 + 2291))) then v131=2 -1;break;end if ((v215==((0 -0) + 0)) or ((250 + 3608)<=(415 + 789))) then local v243=(1806 -(808 + 998)) + 0;while true do if ((v243==(1375 -(695 + 679))) or ((2255 + 128)<(570 + 1 + 0))) then v215=1;break;end if ((v243==(0 -0)) or ((260 + (610 -274))<=225)) then v132=v83[2];v133,v134=v78(v81[v132](v12(v81,v132 + 1,v83[3])));v243=1;end end end end end if ((((5173 -(60 + 1586)) + 472)>(211 + 1147)) and (v131==((627 -(251 + 373)) -1))) then for v226=v132,v70 do local v227=365 -(43 + 322);while true do if ((v227==(564 -(153 + 115 + 296))) or (2213>(8438 -(12639 -8057)))) then v135=v135 + 1;v81[v226]=v133[v135];break;end end end break;end if ((v131==(1 + 0)) or ((5576 -(918 + 132))<=(5324 -(74 + 979)))) then local v216=0 + 0;while true do if ((((1006 + 925) -(160 + 119))>(9 + 29)) and (v216==(219 -(54 + 164)))) then v131=3 -1;break;end if (((3302 -1458)<=(7081 -2330)) and (v216==(0 + 0 + 0))) then local v244=0 -0;while true do if ((71<((24267 -14656) -(20792 -14438))) and (v244==(0 + (1821 -(908 + 913))))) then v70=(v134 + v132) -1;v135=0 + (0 -0);v244=1;end if ((((2142 + 525) -(1768 + 215))==(2555 -(590 + 1281))) and ((1 -0)==v244)) then v216=1 + 0;break;end end end end end end break;end if ((v130==(1 + 0)) or ((7026 -4547)>=(8907 -3964))) then local v200=0;while true do if (((12778 -7959)>4322) and (v200==(0 -0))) then v133=nil;v134=nil;v200=34 -((448 -(128 + 298)) + (23 -12));end if ((v200==(1 + 0)) or ((2031 -(1715 -(136 + 992)))==(4578 -(911 + 423)))) then v130=2 -0;break;end end end if (((387 -289)<2478) and (v130==(0 -0))) then local v201=0 + 0;while true do if (((550 -(26 + 523))==v201) or ((2760 -(403 + 1565))>2234)) then v130=1 + 0;break;end if ((v201==(0 -0)) or (3772<(284 + 16))) then v131=1238 -(1227 + 11);v132=nil;v201=115 -(83 + 31);end end end end else v81[v83[1 + 1]][v83[3]]=v83[(2652 -1317) -(1131 + 200)];end elseif ((v84<=(1119 -(424 + 690))) or ((3363 -1902)>=4498)) then if ((v84>4) or ((1 + 4 + 407)>458)) then v81[v83[2 + 0]]=v81[v83[(759 -(375 + 383)) + 2]][v83[9 -(14 -9)]];else local v138=636 -(67 + 569);local v139;local v140;local v141;local v142;local v143;while true do if (((1638 + 2012)<((3687 + 1336) -(81 + 33))) and (v138==(3 -2))) then v141=nil;v142=nil;v138=3 -1;end if (((2167 + 1061)>(1739 -936)) and (v138==((3 -1) + 0))) then v143=nil;while true do if (((5724 -(413 + 426))>((10069 -3498) -((3094 -2083) + 970))) and (v139==(2 -1))) then local v217=0 + (0 -0);while true do if ((817<(6110 -3858)) and (v217==(1296 -(928 + 368)))) then v70=(v142 + v140) -(827 -(515 + 311));v143=1319 -(663 + 656);v217=(2994 -1483) -((1439 -650) + 721);end if ((v217==(1 -0)) or ((7213 -4500)>(5251 -(1549 + 421)))) then v139=1047 -(404 + 641);break;end end end if ((v139==(0 -0)) or ((2988 -(934 + 212 + 710))>=(3021 -(794 + 237)))) then local v218=0;while true do if (((17119 -12553)>=(1218 + 458)) and (v218==((4 -3) + 0))) then v139=959 -(702 + 168 + 88);break;end if ((v218==(1604 -(487 + 1117))) or ((5377 -1361)<(5719 -(1409 + 369)))) then v140=v83[(785 -(674 + 110)) + 1];v141,v142=v78(v81[v140](v81[v140 + 1]));v218=1 + 0;end end end if ((v139==2) or ((4499 + 98)<(12267 -8386))) then for v228=v140,v70 do local v229=0 -0;while true do if ((v229==(0 + 0 + 0)) or ((1869 + 197)>4140)) then v143=v143 + 1 + 0;v81[v228]=v141[v143];break;end end end break;end end break;end if ((v138==(0 + 0 + 0)) or ((1505 -(414 + 238))==(2371 -510))) then v139=221 -(101 + 120);v140=nil;v138=2 -1;end end end elseif ((v84==(5 + 1)) or (((7587 -3876) -(660 + 207))>=(6957 -2014))) then v81[v83[5 -3]]=v83[3];else v81[v83[2]][v83[3]]=v81[v83[3 + 1]];end elseif ((v84<=11) or ((200 + (206 -(16 + 11)))>(914 + (150 -85)))) then if (((2029 + (1286 -670))>=78) and (v84<=(1440 -(1403 + 28)))) then if ((569<=(2978 -(711 + 193))) and (v84>((1818 -(716 + 1097)) + 3))) then local v146=0 + 0;local v147;while true do if ((v146==(0 + 0)) or (1466>=(2831 -(346 + 190)))) then v147=v83[2 + 0];v81[v147]=v81[v147](v81[v147 + 1]);break;end end elseif (((497 + 3721)>=((108 -69) + 25)) and (v81[v83[6 -4]]==v83[4])) then v69=v69 + 1 + 0;else v69=v83[(632 -(555 + 70)) -4];end elseif (((1495 + 1171)==((14484 -9077) -2741)) and (v84==(24 -14))) then v81[v83[2]]=v35[v83[9 -(1 + 5)]];else v81[v83[2]]=v83[(1265 + 619) -((1502 -(26 + 98)) + 503)]~=(1039 -(907 + 132));end elseif ((v84<=(34 -21)) or ((6260 -(1328 + 661))<(14316 -10821))) then if ((v84>((804 -(232 + 502)) -(18 + 40))) or (3322<232)) then v69=v83[3 + 0];else v81[v83[415 -((1903 -(40 + 1710)) + 260)]]=v28(v76[v83[519 -(87 + 429)]],nil,v36);end elseif ((v84==(36 -22)) or ((3672 -(761 + (244 -94)))>(6842 -2480))) then for v192=v83[1615 -(1197 + 416)],v83[1 + 2] do v81[v192]=nil;end else do return;end end elseif ((976==976) and (v84<=((219 + 269) -(5 + (1588 -(434 + 694)))))) then if ((v84<=(970 -((2106 -(654 + 886)) + 385))) or ((3340 -(859 + 467))==(2840 -1098))) then if (((4812 -2612)>1189) and (v84<=17)) then if ((v84>(1790 -(348 + (2882 -(215 + 1241))))) or ((1422 -(227 + 46))>=(137 + 2510))) then local v151=0;local v152;local v153;local v154;local v155;while true do if ((3051<(13041 -8236)) and (v151==(2 -1))) then local v203=0 -0;while true do if ((v203==(1 + 0)) or (((1751 -(500 + 1168)) + 3856)<=(449 + 141))) then v151=2;break;end if (((2462 -1381)>(1965 -(328 + 1027))) and (v203==((2522 -(646 + 59)) -(1640 + 177)))) then v154=nil;v155=nil;v203=1586 -(412 + 1173);end end end if ((v151==2) or ((2440 + 90)>(8866 -5761))) then while true do if ((v152==1) or ((2645 + 630)<=(4866 -2874))) then v155=v81[v153 + 2 + 0];if (((1026 -(32 + 12))<(3549 -1313)) and (v155>((1985 -(771 + 1214)) + 0))) then if ((v154>v81[v153 + 1]) or ((155 + 4406)>(1970 + 2751 + 64))) then v69=v83[91 -(58 + 30)];else v81[v153 + (825 -(546 + 276))]=v154;end elseif (((4621 -(526 + 547))==3548) and (v154<v81[v153 + (2 -1)])) then v69=v83[1 + 2];else v81[v153 + (12 -9)]=v154;end break;end if ((v152==0) or ((1846 + 1527)<=(9411 -7293))) then local v219=0 -0;while true do if ((v219==(0 -0)) or ((13202 -(10882 -(580 + 450)))<=(2200 -(1110 + 176)))) then local v245=(0 -0) -0;while true do if (((1917 -(139 + 1738))<(2596 + 1182)) and (v245==(0 + 0))) then v153=v83[2];v154=v81[v153];v245=2 -1;end if (((119 + 575)<(376 + 549)) and (v245==1)) then v219=1;break;end end end if ((v219==(1 + 0)) or ((800 + 2279)>=4610)) then v152=1657 -(1072 + 584);break;end end end end break;end if ((v151==(0 + 0)) or (4248<=(7545 -3386))) then v152=0 + (496 -(39 + 457));v153=nil;v151=1;end end else local v156=21 -(14 + 7);local v157;local v158;while true do if (((7179 -4255)>(2203 -(33 + 387))) and (v156==(0 -0))) then v157=0;v158=nil;v156=1619 -(330 + 1288);end if (((1 + 0)==v156) or ((1358 -843)==(283 + 202))) then while true do if ((v157==((0 -0) + (0 -0))) or (2050<(2354 -((3406 -2471) + 5)))) then v158=v83[1 + 1];v81[v158](v81[v158 + (2 -(1 + 0))]);break;end end break;end end end elseif (((243 + 1176)>=(1850 -(180 + 639))) and (v84>18)) then local v159=0 + 0 + 0;local v160;local v161;local v162;while true do if (((1035 -391)==(242 + 360 + 42)) and (v159==(1 + 0 + 0))) then v162=nil;while true do if ((v160==(0 + 0)) or ((1686 -(1236 + 249))>(4756 -(180 + 851)))) then local v220=0 + 0 + 0;while true do if (((2946 -1623)==(276 + 667 + 380)) and ((0 + 0 + 0)==v220)) then v161=0 -0;v162=nil;v220=1 + (627 -(250 + 377));end if ((1==v220) or ((68 + 257)==(4416 -(80 + 930)))) then v160=1 -0;break;end end end if ((1020<((2983 + 2037) -(113 + 1247))) and (v160==(612 -(520 + 91)))) then while true do if (((881 -276)>=200) and (v161==(1629 -(828 + 801)))) then v162=v83[1 + 1];v81[v162]=v81[v162](v12(v81,v162 + (1 -0),v70));break;end end break;end end break;end if ((2909==2909) and (v159==((4634 -3324) -((1436 -(149 + 278)) + 301)))) then v160=0;v161=nil;v159=972 -(952 + 19);end end else v81[v83[2]]=v81[v83[1 + 2]][v81[v83[5 -1]]];end elseif (((3139 -(289 + (932 -(17 + 17))))<=(4277 -(188 + 179))) and (v84<=(84 -63))) then if ((v84>((21 -8) + 7)) or (1344>=(17278 -13277))) then v81[v83[2 + 0]]=v81[v83[2 + 1]];else local v165=0 -0;local v166;while true do if ((4831>=(72 + 1058)) and (v165==(0 -0))) then v166=v83[3 -1];v81[v166]=v81[v166](v12(v81,v166 + 1 + (454 -(213 + 241)),v83[3 -0]));break;end end end elseif (((6191 -(496 + 834))<(5778 -(166 + 649))) and (v84>(15 + 7))) then local v167=0 -(857 -(807 + 50));local v168;while true do if (((4466 -(72 + 61))>=(2230 + (516 -217))) and (v167==((0 -0) -0))) then v168=v83[4 -2];v81[v168](v12(v81,v168 + (1 -0),v70));break;end end else v81[v83[7 -5]]={};end elseif (((2119 -(344 + 699))>=(1944 -(1249 + 14 + 30))) and (v84<=27)) then if (((1101 + 765)==(7096 -(5997 -(538 + 229)))) and (v84<=(1674 -(1585 + 64)))) then if ((4868>(213 -105)) and (v84>24)) then local v170=0;local v171;local v172;while true do if ((v170==1) or ((3648 -1056)>(1109 + (5479 -3618)))) then for v206=v171 + (1061 -(237 + 823)),v83[(9 -5) -1] do v7(v172,v81[v206]);end break;end if ((v170==0) or ((5258 -3329)>(6276 -2638))) then v171=v83[1 + 1];v172=v81[v171];v170=1 + 0;end end else local v173=0 -(0 -0);local v174;local v175;local v176;while true do if (((1432 + 1361)>=(26 + 86)) and (v173==2)) then if (((1044 -(73 + 293))<(10144 -6102)) and (v175>(1178 -(563 + 615)))) then if (((2912 -(102 + 19))==(3041 -(153 + 97))) and (v176<=v81[v174 + (1 -(0 + 0))])) then local v230=0 + 0;while true do if (((403 + (1669 -(1575 + 33)))<(2770 + 776)) and (v230==(1472 -(1078 + 394)))) then v69=v83[942 -(471 + 468)];v81[v174 + 3]=v176;break;end end end elseif (((6077 -4465)<=(4618 -(1096 + 549))) and (v176>=v81[v174 + (32 -(12 + 19))])) then local v231=0 + 0;local v232;local v233;while true do if ((0==v231) or ((4114 -(119 + 1683))>=(9118 -6039))) then v232=0 + 0;v233=nil;v231=1;end if (((377 + 3445)>=220) and (v231==(1 + 0))) then while true do if ((v232==(0 + 0 + 0)) or ((3425 -(310 + 172))>=((227 + 4784) -(870 + (1467 -889))))) then v233=113 -((177 -117) + 53);while true do if (((1886 + 2696)>=(3121 -(1062 + 717))) and (v233==(761 -(82 + 679)))) then v69=v83[3];v81[v174 + 2 + 1]=v176;break;end end break;end end break;end end end break;end if (((2159 -(615 + 96))<=1679) and ((1 + 0)==v173)) then local v205=0 -0;while true do if ((177<4916) and (v205==(1271 -(506 + 765)))) then v176=v81[v174] + v175;v81[v174]=v176;v205=1;end if ((v205==(1 + 0)) or (906>(10774 -6281))) then v173=2 -(0 -0);break;end end end if (((18026 -13304)>=(3120 -(142 + 80))) and (v173==(0 -0))) then v174=v83[349 -(44 + 303)];v175=v81[v174 + (438 -(242 + 17 + 177))];v173=1517 -(749 + 767);end end end elseif (((3243 -(174 + 733))==2336) and (v84>(1979 -(1130 + 823)))) then local v177=(0 -0) -0;local v178;local v179;local v180;local v181;local v182;while true do if ((v177==(1 + (1481 -(1075 + 405)))) or ((1768 + 1168)==(608 -383))) then v182=nil;while true do if ((v178==(988 -(895 + 92))) or ((5174 -(257 + 301))<=(16336 -12900))) then v181=nil;v182=nil;v178=6 -4;end if ((3060==(3868 -(378 + 430))) and (v178==2)) then while true do if (((3699 -1074)>(24 + 110)) and (v179==(0 + 0))) then local v247=0 + 0;while true do if ((1561<=(99 + 4022)) and (v247==(1824 -(504 + 1319)))) then v179=1 + 0;break;end if ((v247==(0 -0)) or (212<117)) then v180=v76[v83[3 + 0]];v181=nil;v247=1 -(0 + 0);end end end if ((1==v179) or ((938 + (9 -4))==(2097 + 176 + 360))) then local v248=0 + 0;while true do if ((v248==(2 -1)) or ((2091 + 1154)<=1786)) then v179=1 + (1410 -(945 + 464));break;end if ((v248==(0 -0)) or (4251<(4207 -(263 + 624)))) then v182={};v181=v9({},{__index=function(v263,v264)local v270=0 + 0;local v271;while true do if (((1320 -(169 + 346))<=(16384 -12110)) and (v270==(0 + 0))) then v271=v182[v264];return v271[3 -2][v271[(607 + 184) -(487 + 302)]];end end end,__newindex=function(v265,v266,v267)local v272=0;local v273;local v274;while true do if (((4137 -1896)>271) and (v272==(0 -0))) then v273=1406 -(160 + 964 + 282);v274=nil;v272=1;end if (((3 -2)==v272) or ((3400 -2407)>=(4800 -((958 -495) + 347)))) then while true do if ((v273==(0 -0)) or ((7177 -4516)<(1235 -(215 + 820)))) then v274=v182[v266];v274[2 -1][v274[1729 -(1446 + 281)]]=v267;break;end end break;end end end});v248=1991 -(129 + 1861);end end end if (((6136 -4291)==1845) and (v179==(6 -4))) then for v257=1 + 0,v83[4] do local v258=(0 -0) + 0;local v259;local v260;while true do if ((v258==0) or ((4787 -(973 + 884))==4457)) then v259=0 -(1656 -(1065 + 591));v260=nil;v258=415 -(131 + 283);end if (((14700 -11361)<=(4138 + 595)) and (v258==1)) then while true do if (((12264 -7607)>((1702 + 600) -1085)) and (v259==(1871 -(1165 + 706)))) then v69=v69 + 1;v260=v74[v69];v259=1 + 0;end if (((1591 + 1559)>2085) and (v259==1)) then if (((256 + 322)>=(1099 -(534 + 190))) and (v260[1]==(2 + 19))) then v182[v257-((9 -6) -2)]={v81,v260[3]};else v182[v257-1]={v35,v260[253 -(5 + 245)]};end v80[ #v80 + (1962 -(880 + 1081))]=v182;break;end end break;end end end v81[v83[391 -(148 + 241)]]=v28(v180,v181,v36);break;end end break;end if ((v178==((0 -0) -0)) or ((549 + 1459)>=(10232 -5948))) then local v222=1966 -(32 + 210 + 1724);while true do if (((3159 -2406)>=(1830 -((174 -53) + 1048))) and (v222==(0 -0))) then v179=0 + 0;v180=nil;v222=1 -0;end if (((281 -106)<=(2657 + 1267)) and (v222==(1 + 0))) then v178=1 + 0;break;end end end end break;end if ((v177==(0 + 0)) or ((167 + 1010)>=(9403 -6034))) then v178=0 + 0;v179=nil;v177=2 -1;end if ((v177==(1 + 0)) or ((608 + 3067)<=(4399 -3127))) then v180=nil;v181=nil;v177=2;end end else local v183=0 + 0 + 0;local v184;local v185;local v186;while true do if ((v183==(1 -0)) or ((617 + 173)>=(4353 -(25 + 128 + 49)))) then v186=nil;while true do if ((v184==(1699 -(957 + 741))) or ((23 + 21)>=(1176 -(44 + 95)))) then for v234=1, #v80 do local v235=183 -(70 + 113);local v236;local v237;local v238;while true do if ((v235==(1 + 0)) or ((7566 -4120)<197)) then v238=nil;while true do if ((((4385 -(885 + 467)) -(216 + 1381))>=(43 + 63 + 289)) and (v236==(1 + 0))) then while true do if (((2253 -(396 + 348))<3285) and (v237==(0 + 0))) then v238=v80[v234];for v278=1708 -((2831 -1749) + 626), #v238 do local v279=0 -0;local v280;local v281;local v282;local v283;while true do if ((v279==(1 + 0)) or ((236 + 185)>=(437 + 2738))) then v282=nil;v283=nil;v279=1097 -(53 + 1042);end if ((2118==(7383 -5265)) and (v279==(578 -(201 + 377)))) then v280=1465 -(1279 + 186);v281=nil;v279=1;end if (((2108 + 2280)>(2850 + 476)) and (v279==(6 -4))) then while true do if ((v280==(0 + (0 -0))) or ((1026 -688)>(1263 + 129))) then local v293=0 + 0;while true do if ((v293==0) or ((1347 + 1449)<=(2081 + 189))) then v281=v238[v278];v282=v281[(4 -3) + 0];v293=1 -(0 + 0);end if (((520 + 389)<1412) and (v293==(467 -(76 + 390)))) then v280=3 -2;break;end end end if (((713 + (3505 -2245))==1973) and (v280==(3 -2))) then v283=v281[(9 -6) -1];if (((v282==v81) and (v283>=v185)) or ((539 + 247)>(6961 -3587))) then local v294=0 + 0;local v295;while true do if (((383 -(97 + 286))==v294) or ((116 + 2737)<=(2167 -(49 + 647)))) then v295=0;while true do if (((8070 -5695)==2375) and (v295==(0 + 0))) then v186[v283]=v282[v283];v281[1131 -(254 + 876)]=v186;break;end end break;end end end break;end end break;end end end break;end end break;end if (((849 -(154 + 206))<=(9397 -5588)) and (v236==(0 + 0))) then v237=0 -0;v238=nil;v236=55 -(4 + (1598 -(236 + 1312)));end end break;end if ((v235==(0 -(0 + 0))) or ((2732 -(18 + 380))>=3904)) then v236=0;v237=nil;v235=1 + 0;end end end break;end if (((0 -0)==v184) or ((236 + 184)<=133)) then local v223=(2618 -(534 + 387)) -(952 + (1287 -(494 + 48)));local v224;while true do if (((154 + 1)<(71 + 3625)) and (v223==((3323 -(1126 + 549)) -(169 + 1479)))) then v224=0;while true do if ((v224==(0 -0)) or (20>(550 + 11))) then v185=v83[2 + 0];v186={};v224=1 + 0;end if ((1==v224) or (2066==(1040 + 326))) then v184=1582 -(185 + 1396);break;end end break;end end end end break;end if ((v183==(0 + 0)) or (4980<=(4169 -(17 + 94)))) then v184=711 -(50 + 661);v185=nil;v183=1;end end end elseif ((v84<=(89 -(1670 -(665 + 945)))) or (1971>=(4520 -(297 + 154)))) then if (((2216 + 1136)==(5336 -(532 + 1452))) and (v84>((2 + 31) -5))) then v81[v83[(304 -(145 + 153)) -4]]=v36[v83[524 -(265 + 256)]];else local v188=0 -0;local v189;local v190;while true do if ((v188==((0 -0) + 0)) or ((4457 -(65 + 73 + 317))<(113 + 517))) then v189=0 + 0;v190=nil;v188=1;end if (((10554 -6348)>=(3555 -1553)) and (v188==(3 -2))) then while true do if ((v189==(0 + 0)) or (((3264 -(333 + 568)) -(4 + 19))>=(57 + 1312 + 1371))) then v190=v83[2 + 0];v81[v190]=v81[v190]();break;end end break;end end end elseif ((v84<=(941 -(155 + 302 + 454))) or ((6515 -3837)>=(3471 + 772))) then v81[v83[(2 -0) + (816 -(274 + 542))]]();elseif (((3316 + 129)<=(3421 + 1419)) and (v84>(44 -13))) then local v194=1307 -(654 + 653);local v195;local v196;local v197;local v198;while true do if (((4475 -(895 + (1575 -878)))<=(13648 -8991)) and (v194==(0 + 0))) then local v207=1948 -(1918 + 30);while true do if (((254 + 748)<=(2891 -(247 + 1102))) and (v207==1)) then v194=166 -(69 + 7 + 89);break;end if ((3731>=(516 + 1853)) and ((0 + 0)==v207)) then v195=0 -0;v196=nil;v207=1 + 0;end end end if ((v194==(2 -1)) or (4764<=(1945 -1435))) then local v208=0;while true do if (((3710 -(4 + 1 + 150))>=(3964 -2668)) and (v208==1)) then v194=2;break;end if ((194<(2401 + 1483)) and (v208==(0 + 0 + 0))) then v197=nil;v198=nil;v208=1 + 0;end end end if (((3033 + 712)==(780 + (4480 -1515))) and (v194==(1 + (247 -(224 + 22))))) then while true do if ((v195==(2 -(2 -1))) or ((1703 + 169 + 862)>=4850)) then v198=v83[2 + 1];for v250=844 -(236 + 607),v198 do v197[v250]=v81[v196 + v250];end break;end if (((1582 -(1479 + 103))==v195) or ((5040 -(654 + 1214))<=(2362 -(513 + 297)))) then local v240=678 -(473 + 205);local v241;while true do if ((((2103 -(786 + 507)) + 1566)<=(8002 -3793)) and (v240==(1758 -(1160 + 598)))) then v241=0 -0;while true do if ((v241==1) or (((5376 -(62 + 1490)) + 273)<(4254 -1912))) then v195=(3 -2) + 0;break;end if ((v241==(782 -(703 + 60 + 19))) or (3626>=(16600 -12525))) then v196=v83[1568 -(1498 + 68)];v197=v81[v196];v241=1;end end break;end end end end break;end end elseif ((v83[2]==v81[v83[4]]) or ((920 + 4033)==25)) then v69=v69 + (364 -(274 + 89)) + 0;else v69=v83[3];end v69=v69 + ((2090 -(101 + 819)) -(1110 + 59));break;end end break;end end end end A,B=v26(v10(v73));if  not A[1] then local v85=v34[4][v69] or "?";error("Script error at ["   .. v85   .. "]:"   .. A[2]);else return v12(A,2,B);end end;end if (v57==0) then v58=v34[1];v59=v34[2];v57=1;end end end return v28(v27(),{},v16)();end vv8());end