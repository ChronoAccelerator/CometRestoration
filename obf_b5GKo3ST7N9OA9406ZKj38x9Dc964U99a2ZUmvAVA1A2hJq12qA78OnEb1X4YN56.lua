do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end if (v0==3) then v13=unpack or table.unpack;v14=tonumber;v15=nil;function v15(v16,v17)local v18=1;local v19;v16=v5(v4(v16,5),"..",function(v30)if (v2(v30,2)==79) then local v65=0;while true do if (v65==0) then v19=v1(v4(v30,1,1));return "";end end else local v66=v3(v1(v30,16));if v19 then local v70=v6(v66,v19);v19=nil;return v70;else return v66;end end end);local function v20(v31,v32,v33)if v33 then local v67=0;local v68;while true do if (v67==(0 + 0)) then v68=(v31/((371 -(222 + 147))^(v32-(1 + 0))))%((1183 -(59 + 1122))^(((v33-1) -(v32-(4 -3))) + (56 -(13 + 42))));return v68-(v68%(2 -1));end end else local v69=2^(v32-(2 -1));return (((v31%(v69 + v69))>=v69) and 1) or (0 -(0 + 0));end end local function v21()local v38=v2(v16,v18,v18);v18=v18 + 1;return v38;end local function v22()local v39=326 -(289 + 37);local v40;local v41;while true do if (v39==((1227 -(351 + 876)) + 0)) then v40,v41=v2(v16,v18,v18 + 2 + 0);v18=v18 + (1443 -(317 + 233 + 891));v39=1499 -(1226 + 272);end if (v39==(3 -2)) then return (v41 * 256) + v40;end end end local function v23()local v42,v43,v44,v45=v2(v16,v18,v18 + (94 -(83 + 8)));v18=v18 + (11 -7);return (v45 * ((37547116 -13737199) -7032701)) + (v44 * (66930 -(831 + 563))) + (v43 * (68 + 188)) + v42;end local function v24()local v46=v23();local v47=v23();return (( -(1306 -(35 + 1269)) * v20(v47,16 + 16)) + 1) * ((5 -3)^(v20(v47,1107 -(768 + 318),822 -(92 + 79 + 199 + 421)) -(623 + 400))) * ((((v20(v47,1,11 + 9) * ((954 -(434 + 389 + 129))^(77 -45))) + v46)/(2^(121 -69))) + 1 + 0);end local function v25(v34)local v48;if  not v34 then v34=v23();if (v34==(450 -(214 + 236))) then return "";end end v48=v4(v16,v18,(v18 + v34) -(1 + 0));v18=v18 + v34;local v49={};for v63=377 -(26 + 350), #v48 do v49[v63]=v3(v2(v4(v48,v63,v63)));end return v7(v49);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v50=0 -0;local v51;local v52;local v53;local v54;local v55;local v56;local v57;local v58;while true do if (v50~=(9 -6)) then else v57=nil;v58=nil;v50=1 + 3;end if (v50~=(1 -0)) then else v53=nil;v54=nil;v50=1 + 1;end if (v50~=2) then else v55=nil;v56=nil;v50=1914 -(1155 + 756);end if (v50==0) then v51=0;v52=nil;v50=1;end if (v50~=(4 + 0)) then else while true do if ((1462 -(628 + 833))==v51) then v54=nil;v55=nil;v51=1 + 1;end if (v51==2) then local v76=0 + 0;while true do if (v76==(3 -2)) then v51=12 -9;break;end if (v76~=(768 -(359 + 409))) then else v56=nil;v57=nil;v76=1 -0;end end end if (v51~=0) then else local v77=0;while true do if (v77==(2 -1)) then v51=1 -0;break;end if (v77==0) then v52=0;v53=nil;v77=2 -1;end end end if (v51~=(4 -1)) then else v58=nil;while true do local v78=0;while true do if (v78~=0) then else local v94=0 + 0;while true do if ((1458 -(1179 + 279))==v94) then if (v52==0) then local v100=0 -0;local v101;while true do if (v100==(964 -(801 + 163))) then v101=0;while true do if (v101==2) then v52=1 + 0;break;end if (v101==(4 -3)) then local v113=0 + 0;while true do if ((0 + 0)==v113) then v55={};v56={v53,v54,nil,v55};v113=1;end if (v113==(341 -(159 + 181))) then v101=2;break;end end end if (v101==(611 -(260 + 351))) then local v114=0;while true do if (v114==(1614 -(276 + 1337))) then v101=1;break;end if (0~=v114) then else local v122=0 -0;while true do if (v122==0) then v53={};v54={};v122=1;end if ((1 -0)~=v122) then else v114=1;break;end end end end end end break;end end end if (v52~=(1577 -(124 + 1452))) then else local v102=488 -(451 + 37);while true do if (v102==(594 -(66 + 526))) then v52=1 + 1;break;end if (v102~=(613 -(269 + 344))) then else v57=v23();v58={};v102=1 + 0;end if ((1 + 0)==v102) then for v107=1,v57 do local v108=0;local v109;local v110;local v111;local v112;while true do if (v108~=0) then else v109=0 -0;v110=nil;v108=1;end if ((953 -(196 + 756))==v108) then v111=nil;v112=nil;v108=269 -(23 + 244);end if ((1 + 1)~=v108) then else while true do if (v109~=(3 -2)) then else v112=nil;while true do if (v110==0) then v111=v21();v112=nil;v110=446 -(141 + 304);end if (v110~=1) then else if (v111==1) then v112=v21()~=0;elseif (v111==2) then v112=v24();elseif (v111==(4 -1)) then v112=v25();end v58[v107]=v112;break;end end break;end if (v109==0) then local v195=0 -0;while true do if (v195==(1417 -(1316 + 101))) then v110=0 + 0;v111=nil;v195=3 -2;end if ((1842 -(1166 + 675))~=v195) then else v109=1;break;end end end end break;end end end v56[2 + 1]=v21();v102=2 + 0;end end end v94=1 + 0;end if (v94~=(1 + 0)) then else v78=1 + 0;break;end end end if (v78~=1) then else if (2~=v52) then else local v97=751 -(260 + 491);while true do local v98=0 + 0;while true do if (v98~=(0 + 0)) then else if (v97~=(1 -0)) then else local v104=0;local v105;while true do if (v104~=0) then else v105=0;while true do if ((0 + 0)==v105) then local v123=0;while true do if (v123==(1456 -(1374 + 82))) then for v212=1,v23() do v55[v212]=v23();end return v56;end end end end break;end end end if (v97~=(0 + 0)) then else local v106=0 + 0;while true do if (v106~=(1 + 0)) then else v97=1;break;end if ((644 -(447 + 197))~=v106) then else for v115=1,v23() do local v116=0;local v117;local v118;local v119;while true do if (v116~=(0 -0)) then else v117=0;v118=nil;v116=1 + 0;end if (v116~=1) then else v119=nil;while true do if (v117~=0) then else v118=0;v119=nil;v117=1;end if (v117~=(899 -(14 + 884))) then else while true do if (v118==(0 -0)) then v119=v21();if (v20(v119,1,1 -0)==(0 -0)) then local v248=0;local v249;local v250;local v251;while true do if (v248==(1 -0)) then local v275=0 -0;while true do if (v275~=1) then else v248=2;break;end if (v275==(1116 -(640 + 476))) then v251={v22(),v22(),nil,nil};if (v249==(0 + 0)) then local v297=0;local v298;while true do if (v297~=(0 -0)) then else v298=0 -0;while true do if (0==v298) then v251[3]=v22();v251[4]=v22();break;end end break;end end elseif (v249==(1 + 0)) then v251[1218 -(138 + 1077)]=v23();elseif (v249==(1 + 1)) then v251[1 + 2]=v23() -(2^16);elseif (v249==3) then local v314=0 + 0;local v315;local v316;while true do if ((52 -(35 + 17))==v314) then local v319=0;while true do if (v319~=1) then else v314=445 -(157 + 287);break;end if (v319~=0) then else v315=1548 -(841 + 707);v316=nil;v319=601 -(429 + 171);end end end if (v314==(137 -(106 + 30))) then while true do if (v315==0) then v316=1619 -(1158 + 461);while true do if (v316~=0) then else v251[9 -6]=v23() -(2^(34 -18));v251[4 + 0]=v22();break;end end break;end end break;end end end v275=1;end end end if (v248==(659 -(228 + 429))) then local v276=0;while true do if (v276==1) then v248=3;break;end if (v276==(0 -0)) then if (v20(v250,1,1)~=(1 -0)) then else v251[1076 -(698 + 376)]=v58[v251[2 + 0]];end if (v20(v250,1015 -(577 + 436),2)~=1) then else v251[2 + 1]=v58[v251[440 -(181 + 256)]];end v276=1;end end end if ((1 + 2)~=v248) then else if (v20(v250,1787 -(885 + 899),1564 -(1323 + 238))~=(1 -0)) then else v251[10 -6]=v58[v251[4]];end v53[v115]=v251;break;end if (v248~=0) then else local v278=1629 -(523 + 1106);local v279;while true do if (v278~=(0 + 0)) then else v279=0;while true do if (v279==(2 -1)) then v248=1;break;end if (v279~=(0 -0)) then else local v309=0;while true do if (v309~=(1217 -(985 + 231))) then else v279=3 -2;break;end if ((0 -0)==v309) then v249=v20(v119,3 -1,5 -2);v250=v20(v119,4,6);v309=728 -(582 + 145);end end end end break;end end end end end break;end end break;end end break;end end end for v120=1,v23() do v54[v120-(661 -(116 + 544))]=v28();end v106=1;end end end break;end end end end break;end end end break;end end break;end end end local function v29(v35,v36,v37)local v59=0;local v60;local v61;local v62;while true do if (v59==0) then v60=v35[1];v61=v35[2];v59=1;end if (v59==1) then v62=v35[3];return function(...)local v71=1;local v72= -1;local v73={...};local v74=v12("#",...) -1;local function v75()local v79=v60;local v80=Const;local v81=v61;local v82=v62;local v83=v27;local v84={};local v85={};local v86={};for v91=0 + (260 -(100 + 160)),v74 do if (((104 + 256)<=((7569 -(233 + 1040)) -(437 + 691 + 573))) and (v91>=v82)) then v84[v91-v82]=v73[v91 + ((3590 -1622) -(1482 + 485))];else v86[v91]=v73[v91 + 1 + 0];end end local v87=(v74-v82) + (1 -0);local v88;local v89;while true do local v92=712 -(590 + 122);local v93;while true do if (((3529 -((2001 -(1430 + 473)) + 417))>=(2327 -(327 + 922))) and ((0 -(0 -0))==v92)) then v93=(143 + 437) -(431 + 149);while true do if (((1200 + 714)>((2393 -644) -(1436 + (496 -(181 + 64))))) and ((0 -0)==v93)) then local v99=0;while true do if (((193 + 1272)<=1532) and (v99==(0 + 0))) then v88=v79[v71];v89=v88[1 + 0];v99=185 -(28 + 156);end if ((v99==1) or (1722==(1694 -(270 + 128)))) then v93=(2 -0) -1;break;end end end if (((525 + 682)==(1606 -(277 + (431 -309)))) and (v93==1)) then if (((4903 -(315 + 326))>=((3930 -(1541 + 344)) + 2066)) and (v89<=15)) then if ((((2271 + 1347) -(807 + 32))<=(2510 + 1896)) and (v89<=7)) then if (((1221 -(741 + 210))==(637 -(89 + 278))) and (v89<=(5 -2))) then if (((1572 -(546 + 513))<(1634 -325)) and (v89<=(1 + 0))) then if ((v89==(0 + 0)) or (((554 + 5007) -(340 + 742 + 45))<=(3807 + 194))) then v86[v88[2 + 0]][v88[7 -4]]=v86[v88[8 -4]];else local v125=0;local v126;local v127;local v128;local v129;local v130;while true do if (((1 + 0)==v125) or ((2195 + 18)>=(4267 + 680))) then v128=nil;v129=nil;v125=1924 -(1571 + 128 + 223);end if ((905<=(4429 -(651 + 1261))) and (v125==(1301 -(1156 + 145)))) then v126=0;v127=nil;v125=2 -1;end if ((v125==2) or (2311>=(1220 + 2995))) then v130=nil;while true do if ((v126==(0 -0)) or (((3551 -1806) + 1012)<(4857 -2414))) then v127=0;v128=nil;v126=934 -(113 + 820);end if ((v126==(2 + 0)) or ((10820 -6841)==(64 -(9 + 0 + 17)))) then while true do if (((4117 -(354 + 1243))<4959) and (v127==(1 -0))) then v130=v86[v128 + ((1770 -(273 + 1490)) -5)];if ((v130>(0 + 0)) or ((1296 + 456)==687)) then if ((v129>v86[v128 + 1 + 0]) or (4091<(11484 -8084))) then v71=v88[1162 -(858 + 301)];else v86[v128 + (5 -2)]=v129;end elseif ((v129<v86[v128 + (114 -(97 + 16))]) or (2222==(2551 -(512 + 76)))) then v71=v88[1096 -(410 + 683)];else v86[v128 + 2 + 1]=v129;end break;end if (((35 + 95)==130) and (v127==(0 + 0))) then local v252=0;local v253;while true do if (((1513 + 1710)<=4776) and (v252==(1753 -(296 + (5354 -3897))))) then v253=0;while true do if (((3148 + 1021)==(9483 -5314)) and ((1 + 0)==v253)) then v127=3 -(657 -(93 + 562));break;end if (((6067 -(4277 -2851))==4641) and (v253==(0 + 0))) then local v289=0 + 0;while true do if (((4489 -2281)<=(79 + 3447)) and (v289==0)) then v128=v88[2];v129=v86[v128];v289=1 -0;end if ((v289==(919 -(144 + 774))) or ((7277 -5491)<(692 + 264))) then v253=1 + (97 -(5 + 92));break;end end end end break;end end end end break;end if ((3634<=((5243 -(984 + 50)) -(122 + 62 + 1))) and (v126==(1 + 0))) then local v222=0 -0;while true do if ((2626>=1832) and (v222==0)) then v129=nil;v130=nil;v222=1;end if (((1 + (1034 -(183 + 851)))==v222) or ((994 + 1152)<=(2055 -(210 + 34 + 168)))) then v126=4 -2;break;end end end end break;end end end elseif ((4327>=(724 -(277 + 408))) and (v89>2)) then v86[v88[2 + 0]]={};else v86[v88[1865 -(566 + 1297)]][v88[1970 -(916 + 1051)]]=v88[1 + 3];end elseif ((v89<=(1607 -((1932 -(134 + 442)) + 246))) or ((2891 + 1424)<=(1956 + 2211))) then if ((v89==(12 -8)) or ((6115 -((2348 -1576) + 109 + 544))<(6339 -2987))) then local v133=0 + 0;local v134;local v135;local v136;while true do if ((v133==(1 + 0)) or ((5432 -(363 + 1526))>(2239 + 1415))) then v136=nil;while true do if (((566 + 822)<(4312 + 342)) and (v134==0)) then local v223=0 -0;while true do if ((v223==1) or ((2282 -(851 + 129))>=(6156 -(400 + 1418)))) then v134=1 + 0;break;end if (((711 + 79)<=(5440 -3540)) and (v223==0)) then v135=v88[2 -0];v136={};v223=1 + 0;end end end if ((3143>=(2230 + 658)) and (v134==1)) then for v236=1 -0, #v85 do local v237=265 -(38 + 227);local v238;local v239;local v240;while true do if ((((2824 -(266 + 1557)) + 2005)==3006) and (v237==(1602 -(513 + (1777 -(471 + 217)))))) then v238=0 + 0;v239=nil;v237=1;end if ((((17923 -12490) -(53 + 302 + 1105))>=(3701 -1601)) and (v237==(766 -(323 + (878 -(242 + 194)))))) then v240=nil;while true do if ((v238==0) or ((5283 -1779)==((2188 -(735 + 508)) -324))) then local v283=0 -0;while true do if (((2226 + 1612)>=(229 + 554)) and (v283==(0 + 0))) then v239=244 -(8 + 236);v240=nil;v283=(1 -0) -0;end if (((1786 -519)<(3791 -(11 + 381 + 976))) and (v283==(2 -1))) then v238=1;break;end end end if (((7235 -3340)>=1014) and (v238==(2 -1))) then while true do if ((v239==(0 + 0)) or ((10288 -7475)==(4182 -1352))) then v240=v85[v236];for v301=1836 -(582 + 1254), #v240 do local v302=0 + 0;local v303;local v304;local v305;local v306;local v307;while true do if ((v302==2) or (((8835 -3435) -(225 + 988))<=646)) then v307=nil;while true do if ((v303==((507 -(93 + 411)) -1)) or ((3813 -(831 + 934))<=179)) then while true do if ((v304==(1 + 0)) or ((109 + (3673 -(442 + 137)))<2773)) then v307=v305[7 -5];if (((v306==v86) and (v307>=v135)) or (4890<=(12682 -9244))) then local v322=1229 -(977 + 252 + 0);while true do if (((2237 + 2323)>(4593 -(2130 -(211 + 213)))) and (v322==(70 -(6 + 64)))) then v136[v307]=v306[v307];v305[4 -3]=v136;break;end end end break;end if (((7173 -5150)>1833) and (v304==(712 -(385 + 327)))) then local v320=1487 -(382 + 1105);local v321;while true do if ((v320==(0 -0)) or ((3244 + 863)<=(1788 -(357 + (1703 -669))))) then v321=0;while true do if (((115 + 54)<4061) and ((1436 -(604 + 831))==v321)) then v304=1 + 0;break;end if ((((1103 -782) -(11 + 310))==v321) or (1748==(2831 + 186))) then local v327=0;while true do if (((693 + (1988 -(1165 + 636)))==(619 + 261)) and (v327==(1378 -(991 + 376 + 11)))) then v305=v240[v301];v306=v305[1 + 0 + 0];v327=1067 -(101 + 965);end if ((v327==1) or (4247<=(1065 + 1548))) then v321=1376 -(1125 + (1110 -(445 + 415)));break;end end end end break;end end end end break;end if ((v303==(1 -0)) or ((2605 -1615)>(4167 -(681 + 109 + 210)))) then local v317=200 -(175 + 25);while true do if ((v317==(0 + 0)) or ((1917 + (422 -(21 + 392)))<=(1004 + 702))) then v306=nil;v307=nil;v317=1277 -(1183 + 93);end if ((v317==(529 -(225 + 92 + 211))) or ((4433 -(698 + 458))<(248 -79))) then v303=1 + 1;break;end end end if ((v303==(1738 -(119 + 1619))) or ((23 + 66)==3252)) then local v318=0 + 0;while true do if (((3464 + 1532)>=(7972 -5867)) and ((248 -(243 + 4))==v318)) then v303=1 -0;break;end if ((v318==((980 -531) -(311 + 138))) or (1188==(18 + 195))) then v304=0 -0;v305=nil;v318=1;end end end end break;end if ((v302==((2637 -1719) -(781 + 137))) or ((1318 -(45 + 498))==(1895 + 290))) then v303=(0 + 0) -0;v304=nil;v302=1057 -((902 -(527 + 233)) + 914);end if (((3503 + 1199)==((6702 -(311 + 1)) -(349 + 1339))) and ((2 -1)==v302)) then v305=nil;v306=nil;v302=6 -(5 -1);end end end break;end end break;end end break;end end end break;end end break;end if ((v133==(0 + 0)) or ((3447 -2101)==((5955 -(326 + 698)) -(589 + 962)))) then v134=0 -0;v135=nil;v133=1 + 0;end end else local v137=0 -0;local v138;local v139;local v140;local v141;while true do if ((3439<4492) and (v137==(683 -(123 + 214 + 345)))) then local v204=0 -0;while true do if ((v204==(0 + 0)) or (3805==(279 -144))) then v72=(v140 + v138) -(1 + 0);v141=1574 -(100 + 1474);v204=1878 -(534 + 1343);end if ((v204==1) or ((3139 -((646 -(476 + 166)) + 88))>(1223 + 2619))) then v137=2 + (0 -0);break;end end end if ((v137==0) or ((5569 -(200 + 544))<(58 + 641))) then local v205=739 -(26 + 713);while true do if ((v205==(325 -(177 + 147))) or ((1969 + (2822 -1682))<=615)) then v137=3 -2;break;end if ((3507>1795) and (v205==(0 -0))) then v138=v88[2 + 0];v139,v140=v83(v86[v138](v86[v138 + (295 -(274 + 20))]));v205=3 -2;end end end if ((v137==(1 + 1)) or ((1936 + 231 + 80)<(2263 -(358 + 368)))) then for v214=v138,v72 do local v215=0;local v216;local v217;while true do if (((1 + 0)==v215) or ((1011 -(279 + 299))>3357)) then while true do if ((v216==0) or ((879 + (3353 -2604))>=(7482 -2826))) then v217=0;while true do if (((858 + 96)>142) and ((0 -0)==v217)) then v141=v141 + 1 + 0;v86[v214]=v139[v141];break;end end break;end end break;end if ((v215==(0 -0)) or ((3210 -(60 + 230))<=(2079 -(156 + 644)))) then v216=0;v217=nil;v215=101 -(67 + 33);end end end break;end end end elseif (((2864 + 846)>(6453 -4157)) and (v89>6)) then local v142=0;local v143;local v144;local v145;local v146;while true do if ((v142==(1668 -(1061 + 606))) or ((1355 + 429)>=(1476 + 2017))) then v145=nil;v146=nil;v142=2 + 0;end if ((v142==2) or (((2725 -1811) -(53 + 50))==(594 + 3382))) then while true do if (((740 + 2048)>=2163) and (v143==(1059 -(630 + 427)))) then for v241=1,v88[(1886 -(1103 + 779)) + 0] do local v242=0 + 0;local v243;local v244;while true do if ((2036<=(4892 -(10859 -8003))) and (1==v242)) then while true do if (((0 -(0 -0))==v243) or ((3129 -(35 + 1175))==((468 + 879) -(65 + 97)))) then local v285=0 -0;while true do if (((0 -0)==v285) or ((686 + 1515)==289)) then local v294=0 -0;while true do if (((4742 -(204 + 215))<(1176 + 3675)) and (v294==(0 + 0))) then v71=v71 + (2 -1);v244=v79[v71];v294=1 + 0;end if ((v294==1) or ((3139 -1379)>=(6317 -(180 + 1455)))) then v285=1604 -(1016 + 587);break;end end end if ((2690<=(3843 -(110 + 176))) and (v285==(1910 -(1610 + 299)))) then v243=1 -0;break;end end end if (((3049 + 984)==(1132 + 2901)) and (v243==(1 -0))) then if ((v244[1 + 0]==14) or ((154 + 198)>(482 + 4376))) then v146[v241-(196 -(115 + 80))]={v86,v244[14 -(13 -2)]};else v146[v241-(3 -2)]={v36,v244[3]};end v85[ #v85 + 1 + 0 + 0]=v146;break;end end break;end if ((4904>3471) and ((621 -(425 + 196))==v242)) then local v257=0 + 0;while true do if ((1645<=(11277 -8354)) and (v257==(3 -2))) then v242=1831 -(104 + 1726);break;end if (((0 -0)==v257) or ((5384 -(476 + 538))<(2715 -1017))) then v243=0 -0;v244=nil;v257=1;end end end end end v86[v88[2 + 0]]=v29(v144,v145,v37);break;end if (((0 -0)==v143) or ((6043 -3114)<(2909 -(121 + 538)))) then local v225=0;while true do if (((2401 -(1346 + 15))<(4566 -(329 + 924))) and (v225==(1 + 0 + 0))) then v143=1505 -(1179 + 325);break;end if ((((8748 -(251 + 1304)) -2717)>=(1731 -(897 + 5))) and (v225==(682 -(565 + 117)))) then v144=v81[v88[1 + 2]];v145=nil;v225=1 + 0;end end end if ((v143==(4 -3)) or ((2436 + 1327)<(1064 + 521))) then local v226=(980 + 756) -(116 + 1620);while true do if (((1196 -(448 + 77))<=(4854 -(279 + 1388))) and (v226==(0 + 0))) then v146={};v145=v10({},{__index=function(v258,v259)local v270=0 -0;local v271;local v272;while true do if (((1628 -((2288 -1199) + 42))<=(5317 -(87 + 893))) and ((1295 -(1092 + 202))==v270)) then while true do if (((4546 -(1155 + 455))>=((4051 + 259) -(237 + 1592))) and ((0 -(726 -(704 + 22)))==v271)) then local v308=0;while true do if (((1279 + 3027)>(1528 -(88 + 5 + 5))) and (v308==(0 -0))) then v272=v146[v259];return v272[1][v272[1 + 1]];end end end end break;end if (((0 + 0)==v270) or ((886 + 1457)>4723)) then v271=0;v272=nil;v270=(965 -(750 + 214)) + 0;end end end,__newindex=function(v260,v261,v262)local v273=0 + 0;local v274;while true do if ((v273==(0 + 0)) or (((2673 -1488) -471)<=(577 -(328 + 16)))) then v274=v146[v261];v274[1 + 0][v274[2]]=v262;break;end end end});v226=1;end if (((9074 -4764)>2761) and (v226==1)) then v143=1 + 1;break;end end end end break;end if ((v142==((940 -(163 + 777)) + 0)) or (1560>=(293 + 1965))) then v143=0 + 0;v144=nil;v142=1 -0;end end else local v147=0 + 0;local v148;while true do if ((v147==0) or ((447 + 27)>=3670)) then v148=v88[1 + 1];v86[v148](v86[v148 + (1709 -(138 + 1570))]);break;end end end elseif (((3051 + 1400)>=((4948 -(1095 + 324)) + 507)) and (v89<=(115 -(60 + 44)))) then if ((v89<=(6 + 0 + 3)) or (478==(1497 -1086))) then if ((v89==(1176 -(736 + 432))) or (2599==2231)) then v86[v88[2]]=v88[1167 -(175 + 989)]~=0;else local v150=562 -(39 + 523);local v151;local v152;local v153;while true do if ((((3045 -1989) + 1192 + 1016)>(1012 -597)) and (v150==(1 + 0))) then v153=nil;while true do if ((v151==(1 + 0)) or ((6887 -(1524 + 429))<337)) then while true do if (((1451 -706)<=992) and (v152==(0 -0))) then v153=v88[(1 + 6) -(1509 -(401 + 1103))];v86[v153](v13(v86,v153 + (1268 -(1216 + 51)),v72));break;end end break;end if ((v151==0) or ((4459 -(177 + (880 -408)))<(3306 -(1046 + 208)))) then local v227=0 + (310 -(149 + 161));while true do if ((v227==(0 + 0)) or (((2599 -1117) + 2154)<=((2602 -(198 + 974)) -(52 + 364)))) then v152=0 -0;v153=nil;v227=1 -0;end if (((2297 + 0)>(815 -(6 + (467 -(194 + 217))))) and (v227==(4 -3))) then v151=641 -((290 -177) + 527);break;end end end end break;end if ((v150==(1827 -(928 + 899))) or (2016==(6863 -3096))) then v151=0 + 0;v152=nil;v150=1 + 0;end end end elseif (((3383 -2130)<=(4548 -(472 + (1253 -(63 + 725))))) and (v89==10)) then v86[v88[(2347 -(788 + 191)) -(386 + 980)]]=v88[6 -3];else local v155=1127 -(493 + 634);local v156;local v157;while true do if ((v155==(402 -(240 + 161))) or (74>=(4337 -(1102 + 603)))) then v86[v156 + 1 + 0]=v157;v86[v156]=v157[v88[15 -11]];break;end if ((4569>(278 + 974)) and (v155==(0 -0))) then local v208=(5040 -3290) -(1204 + 330 + 216);while true do if ((1547>=(517 -(1419 -(195 + 1001)))) and (v208==(0 + 0))) then v156=v88[779 -((379 -101) + 499)];v157=v86[v88[60 -(49 + 8)]];v208=1;end if ((v208==(1582 -(237 + (4849 -3505)))) or ((1105 + 593)<(2321 -(424 + 187 + 406)))) then v155=1 + (1503 -(175 + 1328));break;end end end end end elseif (((8990 -4579)>(5445 -1669)) and (v89<=(1462 -(297 + 200 + 54 + 898)))) then if ((v89==(10 + 2)) or ((4975 -(1457 + 50))<(7292 -4833))) then do return;end else v86[v88[2]]=v36[v88[3]];end elseif (((3389 -(412 + 723))>=146) and (v89>(55 -41))) then v86[v88[1 + 1]]=v37[v88[3 + 0]];else v86[v88[7 -5]]=v86[v88[3 + 0 + 0]];end elseif ((v89<=(12 + 11)) or (3386>(3293 + 676))) then if ((v89<=(49 -30)) or ((6350 -3184)<(161 + 331 + 124))) then if (((461 + 1517)==(2846 -(329 + 539))) and (v89<=(32 -15))) then if ((v89>(548 -(411 + 121))) or (2807==(30 + 3229))) then for v196=v88[2 + 0],v88[157 -(49 + (1289 -(875 + 309)))] do v86[v196]=nil;end else local v161=(111 + 396) -((528 -(96 + 357)) + 432);local v162;local v163;local v164;local v165;while true do if ((v161==(1 + 1 + 0)) or (((4708 -(1321 + 637)) -(1240 + 25))>=(2384 -(122 + 747)))) then while true do if (((1 + (418 -(310 + 108)))==v162) or (438>=((860 -621) + 1559))) then local v228=1571 -(571 + (2526 -(445 + 1081)));local v229;while true do if (((487 + 375)<(357 + 1749)) and (v228==(0 -0))) then v229=0 + 0;while true do if ((v229==((1094 -(779 + 129)) -(183 + 2))) or ((38 + 1019)==(936 -712))) then v162=2 + 0;break;end if ((v229==0) or ((9952 -(19483 -12741))>=4330)) then local v280=0 -0;while true do if ((972==(2952 -(467 + 1513))) and (v280==(0 -0))) then v165=v86[v163] + v164;v86[v163]=v165;v280=2 -1;end if (((3021 -(69 + 583))<=(2879 -(144 + 287))) and (v280==1)) then v229=1789 -(813 + 975);break;end end end end break;end end end if ((v162==(55 -(20 + (168 -133)))) or (((3570 -1751) -(219 + 1388))==383)) then local v230=0 + 0;local v231;while true do if ((v230==(1473 -(1428 + 45))) or (4692<=(4487 -(18 + 510 + 362)))) then v231=1712 -(97 + 1615);while true do if (((6309 -(1144 + 190))==(6565 -(562 + 1028))) and (v231==(0 + 0))) then v163=v88[1529 -(1385 + 142)];v164=v86[v163 + 1 + 1 + 0];v231=1630 -(366 + 1263);end if (((1465 -525)<=((773 -(298 + 86)) + 2825)) and (v231==(2 -1))) then v162=1 -0;break;end end break;end end end if (((4203 -(1518 + 250))==(859 + 1576)) and (v162==(2 + 0))) then if ((v164>0) or (778>(612 + 1543))) then if ((v165<=v86[v163 + ((2370 -(700 + 641)) -(1023 + 5))]) or ((9071 -6171)<519)) then local v263=(0 + 0) -(0 + 0);local v264;while true do if (((2278 + 132)>(162 + 761 + 490)) and (v263==0)) then v264=1123 -(396 + 727);while true do if (((5454 -(457 + 39))>=(5635 -(902 + 275))) and (v264==(0 + (0 -0)))) then v71=v88[5 -2];v86[v163 + 3]=v165;break;end end break;end end end elseif ((v165>=v86[v163 + 1 + (787 -(496 + 291))]) or (3088==3554)) then local v265=0 + 0;local v266;while true do if ((v265==(0 -(0 + 0))) or ((1996 -(1315 + 375))>(1103 -656))) then v266=0;while true do if ((v266==0) or ((4477 -(1339 + 247))==(1767 + 1299))) then v71=v88[861 -(31 + 827)];v86[v163 + (5 -2)]=v165;break;end end break;end end end break;end end break;end if ((v161==(1 -0)) or ((1610 -(171 + 997))<(743 -(337 + 65)))) then local v209=0 -0;while true do if (((270 -(4 + 266))==v209) or ((2857 -1484)>(3343 + 1038))) then v164=nil;v165=nil;v209=1990 -(1028 + 961);end if ((708<(1566 -514)) and (v209==(424 -(301 + 122)))) then v161=1057 -(573 + 482);break;end end end if (((502 + 2273)>(25 + 7 + 17)) and (v161==((76 + 678) -(524 + 230)))) then v162=0 -0;v163=nil;v161=1 + 0;end end end elseif (((3326 -(1129 + 271))<=(465 + 2353)) and (v89>(1232 -(11 + 1203)))) then local v166=0;local v167;local v168;local v169;local v170;local v171;while true do if (((1615 -(147 + 148))>(934 + 311)) and (v166==((12 -(5 + 5)) -0))) then v171=nil;while true do if ((v167==1) or ((3994 -(780 + (2576 -(1231 + 455))))<=(2283 -(220 + 1092)))) then local v232=987 -(679 + 308);while true do if ((v232==(0 + 0)) or (741<((2587 -2020) -357))) then v170=nil;v171=nil;v232=1 -(0 -0);end if ((v232==(4 -3)) or (1849>=(304 + 3417))) then v167=6 -4;break;end end end if ((v167==(1269 -(1239 + 30))) or (2560>3786)) then local v233=0;while true do if (((3370 -(57 + 90))==3223) and (v233==(901 -(813 + 88)))) then v168=(0 -0) -(0 -0);v169=nil;v233=1;end if (((3915 -(176 + 1654))<=(3063 -(100 + 21))) and (v233==1)) then v167=587 -(207 + 379);break;end end end if ((2==v167) or ((358 + 1910)<=(606 -249))) then while true do if (((7052 -2221)>(1812 -(142 + 855))) and (v168==(0 + 0))) then local v254=0 + 0 + 0;local v255;while true do if ((v254==(259 -(195 + 64))) or ((722 -466)==(320 + (1853 -(868 + 413))))) then v255=1108 -(818 + 236 + 54);while true do if (((1506 -(118 + 792))<4101) and (v255==(482 -(111 + 371)))) then local v293=0 -0;while true do if ((v293==(1779 -(738 + 1040))) or ((307 + 722)>(4439 -(69 + 424)))) then v255=1899 -(94 + 1804);break;end if ((v293==(1478 -(849 + (1976 -(742 + 605))))) or ((3625 -(62 + 72 + 997))>=((3401 -2169) + 2191))) then v169=v88[396 -(261 + 133)];v170=v86[v169];v293=740 -(51 + 688);end end end if (((1361 -(12 + 22))<(4480 -3038)) and (((1769 -(569 + 92)) -(1095 + 12))==v255)) then v168=1 + 0 + 0;break;end end break;end end end if ((((16331 -12523) -(311 + 318 + 542))==(6871 -4234)) and (v168==(1 + 0))) then v171=v88[7 -4];for v267=34 -(25 + 8),v171 do v170[v267]=v86[v169 + v267];end break;end end break;end end break;end if ((0==v166) or (4329<=(2343 -(7 + 49)))) then v167=0 -0;v168=nil;v166=1 -0;end if (((52 + 222)<=(2365 -754)) and (v166==(4 -3))) then v169=nil;v170=nil;v166=(905 -(115 + 787)) -1;end end else local v172=(3382 -(929 + 751)) -(1602 + 100);local v173;local v174;local v175;while true do if (((16708 -13085)>(3768 -(215 + 1525))) and (v172==(2 -1))) then v175=nil;while true do if (((5711 -2838)>(2965 -1612)) and ((400 -(55 + (1526 -1182)))==v173)) then for v245=v174 + (3 -2),v88[11 -8] do v8(v175,v86[v245]);end break;end if ((v173==(0 -0)) or ((5121 -2760)>(4887 -(687 + 46)))) then local v234=0 + 0;while true do if ((v234==(0 + 0)) or (3793<=(1171 -(114 + 180)))) then v174=v88[8 -(1473 -(976 + 491))];v175=v86[v174];v234=1 -0;end if (((1807 + (7874 -4710))>(5806 -(12985 -8952))) and (v234==(653 -(224 + 428)))) then v173=1;break;end end end end break;end if (((13688 -(22273 -13086))<=4820) and (v172==(0 + 0))) then v173=151 -(64 + 87);v174=nil;v172=1149 -(113 + 1035);end end end elseif ((v89<=(29 -8)) or ((3360 -(1548 + 240))>=(3892 + 793))) then if ((763<(6259 -2347)) and (v89==20)) then local v176=0 -0;local v177;local v178;local v179;local v180;while true do if (((3055 -(309 + 214))<2829) and (v176==0)) then v177=v88[(351 + 228) -(155 + 422)];v178,v179=v83(v86[v177](v13(v86,v177 + (1219 -(851 + 367)),v88[5 -2])));v176=1;end if ((v176==(249 -(106 + 141))) or (((2042 + 3328) -(1563 + 287))<(3582 -(79 + 241)))) then for v218=v177,v72 do local v219=0 -0;local v220;while true do if (((3289 -2095)<=(5532 -(232 + 1232))) and (v219==(0 + 0))) then v220=0;while true do if ((v220==((702 + 246) -(275 + 673))) or ((420 + (2054 -1052))<=(1587 -610))) then v180=v180 + (668 -(172 + 42 + 453));v86[v218]=v178[v180];break;end end break;end end end break;end if ((2225<=(5341 -(300 + 363))) and (v176==(4 -3))) then local v210=0 + 0;while true do if ((v210==(1398 -(666 + 161 + 570))) or ((725 + 456 + 1777)>=(5324 -(329 + 231)))) then v176=644 -((1002 -455) + 95);break;end if ((v210==0) or (1679==2201)) then v72=(v179 + v177) -(1 + 0 + 0);v180=0 + 0;v210=1 + 0;end end end end else v86[v88[2 + 0]]=v29(v81[v88[1 + 2]],nil,v37);end elseif ((v89>((265 -156) -87)) or ((1613 + 772)==(3215 -(99 + 508)))) then if ((v86[v88[1690 -(821 + 867)]]==v88[4 + 0]) or (((14277 -7382) -(12663 -8468))>(4842 -(786 + 212)))) then v71=v71 + 1;else v71=v88[1 + 2];end else local v182=0;local v183;local v184;while true do if (((5611 -3876)<(1662 + (2441 -(158 + 1035)))) and ((0 -0)==v182)) then v183=(1246 -622) -(266 + 358);v184=nil;v182=1 + 0;end if ((v182==(1 + 0)) or (3004>=(3364 -(13 + 6 + 66)))) then while true do if (((2777 + 2148)>=(245 + 800)) and (0==v183)) then v184=v88[1 + 1];v86[v184]=v86[v184]();break;end end break;end end end elseif ((((264 + 4871) -(372 + 815))<=(4864 -(347 + 28))) and (v89<=(972 -(795 + 150)))) then if ((v89<=(1512 -(646 + 841))) or ((9010 -5306)<=(2157 + 514 + 149))) then if (((3497 -(507 + 531))>(1997 -(217 + (2303 -(1014 + 968))))) and (v89==24)) then v86[v88[2 + 0]]=v86[v88[1 + 2]][v86[v88[4]]];else v71=v88[4 -1];end elseif ((v89==(49 -23)) or (2798==(2350 -((2222 -(451 + 1314)) + 30)))) then v86[v88[2]]();else v86[v88[2 + 0]]=v86[v88[3 + 0]][v88[9 -5]];end elseif (((3399 -2048)<=(306 + 4266)) and (v89<=(9 + 20))) then if (((3066 -1938)<(1904 -(138 + 123))) and (v89==(756 -(245 + (1519 -1036))))) then local v187=0 -0;local v188;local v189;local v190;while true do if ((v187==(0 -0)) or ((2934 + 503)<(3118 -(448 + 79)))) then v188=1065 -(157 + (1624 -(489 + 227)));v189=nil;v187=1 + (0 -0);end if (((4677 -1463)>=(4253 -(215 + 1186))) and (v187==(3 -2))) then v190=nil;while true do if ((v188==(2 -1)) or (1949<=(111 + 61))) then while true do if ((2249<=(5108 -(1093 + 379))) and (0==v189)) then v190=v88[2];v86[v190]=v86[v190](v13(v86,v190 + 1,v72));break;end end break;end if (((342 + 2196)<=3990) and (v188==0)) then v189=0;v190=nil;v188=787 -(607 + 179);end end break;end end else local v191=0;local v192;local v193;local v194;while true do if (((7183 -3083)>=(2397 -1408)) and (v191==(1 -0))) then v194=nil;while true do if (((39 + 181)==(1438 -(668 + 550))) and (v192==(0 + 0))) then v193=0 + (544 -(128 + 416));v194=nil;v192=(4 -3) + 0;end if (((7521 -5282)<(4709 -(183 + 785))) and (v192==(875 -((1803 -(916 + 718)) + 705)))) then while true do if ((v193==(224 -(62 + 162))) or (((426 + 19) -(213 + 44))<(1697 -(883 + 801)))) then v194=v88[117 -(83 + 32)];v86[v194](v13(v86,v194 + ((692 -(545 + 145)) -1),v88[(11 -6) -2]));break;end end break;end end break;end if ((v191==(0 -(0 -0))) or ((1794 + 2396)<(803 + 1141))) then v192=457 -(108 + 349);v193=nil;v191=582 -(369 + (1726 -(1064 + 450)));end end end elseif ((v89<=(940 -(735 + 175))) or ((887 -(89 + 396))>(2589 -(804 + 542)))) then if ((v88[299 -(198 + 99)]==v86[v88[8 -4]]) or ((4109 + 436)<=(778 + 872))) then v71=v71 + (3 -2);else v71=v88[1512 -(1058 + 451)];end elseif ((v89==(42 -11)) or ((11428 -7335)>(5956 -(729 + 505)))) then local v198=0;local v199;local v200;while true do if ((((1605 -(1321 + 283)) -0)==v198) or ((2360 + 799)<(2688 -2126))) then while true do if (((1389 + 984)>=(3388 -2325)) and (v199==(0 -(0 -0)))) then v200=v88[1937 -(239 + 1696)];v86[v200]=v86[v200](v13(v86,v200 + 1 + 0,v88[3 + 0]));break;end end break;end if ((v198==(0 -0)) or ((562 + 243)<(781 -((897 -(502 + 381)) + 94)))) then v199=0 -0;v200=nil;v198=1 + 0 + 0;end end else local v201=813 -(351 + 462);local v202;local v203;while true do if ((v201==(1344 -(30 + 1313))) or ((10743 -5810)<=(6332 -(1227 + 528)))) then while true do if (((5610 -3033)==(2963 -(232 + 129 + 25))) and (v202==(0 -0))) then v203=v88[2];v86[v203]=v86[v203](v86[v203 + ((775 + 1042) -(464 + 1352))]);break;end end break;end if ((v201==(0 -0)) or ((1261 + 3309)==(6626 -3454))) then local v221=0;while true do if (((290 + 971)<=(4086 -1469)) and (v221==(232 -(189 + 43)))) then v202=0;v203=nil;v221=1;end if (((1533 -(1130 -222))<=(9064 -5933)) and (v221==(972 -(286 + 685)))) then v201=2 -1;break;end end end end end v71=v71 + (4 -3);break;end end break;end end end end A,B=v27(v11(v75));if  not A[1] then local v90=v35[4][v71] or "?";error("Script error at ["   .. v90   .. "]:"   .. A[2]);else return v13(A,2,B);end end;end end end return v29(v28(),{},v17)();end v0=4;end if (v0==2) then v9=getfenv or function()return _ENV;end;v10=setmetatable;v11=pcall;v12=select;v0=3;end if (1==v0) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==4) then vv9());break;end end end