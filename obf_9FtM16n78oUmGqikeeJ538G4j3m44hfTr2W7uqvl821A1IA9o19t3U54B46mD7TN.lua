do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==4) then v13=unpack or table.unpack;v14=tonumber;v15=nil;v0=5;end if (v0==5) then function v15(v16,v17)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==0) then v19=1;v20=nil;v16=v5(v4(v16,5),"..",function(v31)if (v2(v31,2)==79) then local v63=0;while true do if (v63==0) then v20=v1(v4(v31,1,1));return "";end end else local v64=0;local v65;while true do if (v64==0) then v65=v3(v1(v31,16));if v20 then local v78=0;local v79;while true do if (v78==0) then v79=v6(v65,v20);v20=nil;v78=1;end if (v78==1) then return v79;end end else return v65;end break;end end end end);v18=1;end if (v18==3) then v24=nil;function v24()local v39,v40,v41,v42=v2(v16,v19,v19 + 3);v19=v19 + ((33 -16) -13);return (v42 * (16778242 -(822 + 204))) + (v41 * (67005 -(592 + 877))) + (v40 * 256) + v39;end v25=nil;v18=4;end if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==6) then v29=nil;function v29()local v43=1916 -(534 + 1382);local v44;local v45;local v46;local v47;local v48;local v49;local v50;while true do if (v43~=1) then else v46=nil;v47=nil;v43=2 -0;end if (v43~=(996 -(915 + 79))) then else v48=nil;v49=nil;v43=3 + 0;end if (v43==3) then v50=nil;while true do local v76=623 -(368 + 255);local v77;while true do if (0~=v76) then else v77=1754 -(678 + 1076);while true do if (v77==(1 + 0)) then if ((1 + 0)~=v44) then else v48={v45,v46,nil,v47};v49=v24();v50={};v44=2;end if (v44==(0 -0)) then local v98=0;while true do if ((284 -(30 + 254))~=v98) then else v45={};v46={};v98=1;end if (v98==(1 + 0)) then v47={};v44=1;break;end end end break;end if (v77==0) then local v94=0;while true do if (v94~=1) then else v77=1;break;end if (0~=v94) then else if (v44==(5 -3)) then for v101=1,v49 do local v102=0;local v103;local v104;local v105;while true do if (v102==(0 -0)) then local v109=0 -0;while true do if (1==v109) then v102=903 -(92 + 810);break;end if (v109~=(1700 -(804 + 896))) then else v103=0 -0;v104=nil;v109=1;end end end if (v102==(2 -1)) then v105=nil;while true do if (v103==1) then if (v104==1) then v105=v22()~=0;elseif (v104==(5 -3)) then v105=v25();elseif (v104~=3) then else v105=v26();end v50[v101]=v105;break;end if (v103==(0 -0)) then local v186=0;local v187;while true do if (v186==0) then v187=1967 -(1634 + 333);while true do if (v187~=1) then else v103=1;break;end if (v187~=0) then else local v221=1516 -(470 + 1046);while true do if (v221==(1 -0)) then v187=1 + 0;break;end if (v221~=(0 + 0)) then else v104=v22();v105=nil;v221=1;end end end end break;end end end end break;end end end v48[7 -4]=v22();for v106=1 + 0,v24() do local v107=0;local v108;while true do if (v107~=0) then else v108=v22();if (v21(v108,1,1)~=0) then else local v114=0;local v115;local v116;local v117;local v118;while true do if (v114~=2) then else while true do if (v115~=2) then else if (v21(v117,1,1)==1) then v118[2 + 0]=v50[v118[2]];end if (v21(v117,7 -5,532 -(363 + 167))~=1) then else v118[1246 -(856 + 387)]=v50[v118[3]];end v115=3;end if (v115==3) then if (v21(v117,853 -(520 + 330),3)~=(1 + 0)) then else v118[4]=v50[v118[7 -3]];end v45[v106]=v118;break;end if (1==v115) then local v208=371 -(307 + 64);while true do if (v208~=(1384 -(1372 + 11))) then else v115=1420 -(462 + 956);break;end if (v208~=0) then else v118={v23(),v23(),nil,nil};if (v116==0) then local v258=0 -0;local v259;local v260;while true do if (v258==1) then while true do if (v259==0) then v260=0 + 0;while true do if (v260~=0) then else v118[8 -5]=v23();v118[4]=v23();break;end end break;end end break;end if (v258~=0) then else v259=0 -0;v260=nil;v258=2 -1;end end elseif (v116==(87 -(85 + 1))) then v118[1 + 2]=v24();elseif (v116==2) then v118[3]=v24() -(2^(1092 -(317 + 759)));elseif (v116~=3) then else local v284=0;local v285;local v286;while true do if (v284==(0 -0)) then v285=667 -(389 + 278);v286=nil;v284=1;end if (v284~=1) then else while true do if (v285~=(0 -0)) then else v286=0;while true do if (0==v286) then v118[8 -5]=v24() -(2^16);v118[997 -(527 + 466)]=v23();break;end end break;end end break;end end end v208=1;end end end if ((1924 -(715 + 1209))==v115) then local v209=0;local v210;while true do if ((1117 -(351 + 766))==v209) then v210=1390 -(796 + 594);while true do if (v210==(0 + 0)) then local v262=1352 -(1266 + 86);while true do if (v262==(0 + 0)) then v116=v21(v108,2,3);v117=v21(v108,4,6);v262=1 -0;end if (v262==1) then v210=1 + 0;break;end end end if ((1 + 0)==v210) then v115=1402 -(714 + 687);break;end end break;end end end end break;end if (v114~=(0 + 0)) then else v115=0;v116=nil;v114=1;end if (v114~=1) then else v117=nil;v118=nil;v114=2 -0;end end end break;end end end v44=9 -6;end if ((1628 -(940 + 685))~=v44) then else local v100=0;while true do if (v100==(0 + 0)) then for v110=1,v24() do v46[v110-(1 -0)]=v29();end for v112=1,v24() do v47[v112]=v24();end v100=2 -1;end if (v100~=(1 + 0)) then else return v48;end end end v94=1 -0;end end end end break;end end end break;end if (v43~=(0 + 0)) then else v44=1430 -(1134 + 296);v45=nil;v43=1 + 0;end end end v30=nil;v18=7;end if (v18==2) then function v22()local v51=v2(v16,v19,v19);v19=v19 + 1;return v51;end v23=nil;function v23()local v52,v53=v2(v16,v19,v19 + 2);v19=v19 + (2 -0);return (v53 * (1 + 255)) + v52;end v18=3;end if (v18==7) then function v30(v32,v33,v34)local v54=v32[1];local v55=v32[2];local v56=v32[3];return function(...)local v66=0;local v67;local v68;local v69;local v70;local v71;while true do if (v66==3) then A,B=v28(v11(v71));if  not A[1] then local v80=v32[4][v67] or "?";error("Script error at ["   .. v80   .. "]:"   .. A[2]);else return v13(A,2,B);end break;end if (v66==2) then v71=nil;function v71()local v81=v54;local v82=Const;local v83=v55;local v84=v56;local v85=v28;local v86={};local v87={};local v88={};for v92=955 -(127 + 828),v70 do if (((854 + (3600 -2620))>=(872 -(323 + 183))) and (v92>=v84)) then v86[v92-v84]=v69[v92 + 1];else v88[v92]=v69[v92 + (2 -(1 + 0))];end end local v89=(v70-v84) + 1;local v90;local v91;while true do local v93=0 -0;while true do if ((v93==(0 -0)) or ((2833 -1320)>=(2689 + 1539))) then local v97=0;while true do if (((669 + 3445)<(14218 -10036)) and (v97==1)) then v93=1 + 0;break;end if (((1183 + 522)<(1323 + 866)) and ((0 -0)==v97)) then v90=v81[v67];v91=v90[1 -(0 -0)];v97=1851 -(96 + (2727 -(249 + 724)));end end end if ((1==v93) or ((2904 + 1058)<(863 + 783))) then if ((v91<=(2 + 14)) or ((12499 -(8185 -(138 + 404)))<=(1134 + 1275))) then if ((v91<=7) or ((375 + (4302 -(1017 + 689)))==(1782 -(757 + 222)))) then if ((v91<=3) or (905>2356)) then if (((3672 -(112 + 21))>(103 + 320)) and (v91<=(1 + 0))) then if (((6051 -2863)<=3903) and (v91>0)) then v88[v90[2 -0]]=v88[v90[1711 -(1603 + 105)]][v88[v90[1 + 3]]];else local v120=(3432 -(1676 + 250)) -(346 + 1160);local v121;local v122;local v123;local v124;local v125;while true do if ((v120==(1 + 0)) or ((3191 -(33 + 217))<=((9469 -7096) -(620 + 1163)))) then v123=nil;v124=nil;v120=5 -3;end if (((94 + 897)<=(5074 -(472 + 895))) and (v120==((1871 -1211) -(632 + 26)))) then v125=nil;while true do if (((1230 -(230 + 1000))==v121) or (2464<=(1601 -(5 + 740)))) then v122=0;v123=nil;v121=(1 + 0) -0;end if ((v121==(6 -4)) or ((3428 -2031)>=3447)) then while true do if ((v122==0) or (2612>=(48 + 3401))) then local v247=0 + 0;local v248;while true do if ((v247==(0 + 0)) or ((5794 -3665)>=(3143 -(387 + (565 -(13 + 7)))))) then v248=1413 -(64 + 1349);while true do if (((1030 + 3315)>=(1656 + 1515)) and (v248==(1 + (1883 -(1456 + 427))))) then v122=1 + 0;break;end if ((v248==0) or (2348>=(12985 -9485))) then v123=v90[4 -2];v124=v88[v123];v248=1 + 0;end end break;end end end if ((3090==(8687 -5597)) and ((1 + 0)==v122)) then v125=v90[2 + (2 -1)];for v253=1807 -(1159 + 647),v125 do v124[v253]=v88[v123 + v253];end break;end end break;end if (((3566 -2657)<=(6176 -(587 + 1411))) and (v121==1)) then local v211=(856 -(371 + 13)) -(223 + 144 + 105);while true do if (((1715 + 3133)>(440 + 2258)) and (v211==(1 -0))) then v121=6 -4;break;end if ((0==v211) or (2794>(1298 + 2850))) then v124=nil;v125=nil;v211=1;end end end end break;end if ((4277>558) and ((649 -(423 + 39 + 187))==v120)) then v121=331 -(266 + 65);v122=nil;v120=1;end end end elseif (((4491 -(70 + 15))<=(1536 + 3078)) and (v91==2)) then local v126=0 -0;local v127;local v128;local v129;while true do if ((1237<=(2224 -(30 + 108))) and (v126==(0 -0))) then v127=0 -0;v128=nil;v126=668 -(259 + 116 + 292);end if (((930 + 531)==(80 + 1381)) and (v126==1)) then v129=nil;while true do if (((0 + 0 + 0)==v127) or (1886==(3105 -(31 + 65)))) then local v212=1064 -(1023 + 41);while true do if ((v212==(0 + 0)) or ((3236 -(872 + 35))==(359 + 1207))) then v128=v90[2 + (1063 -(697 + 366))];v129=v88[v90[1 + 2]];v212=1 + 0;end if ((4986>=(2406 -(198 + (49 -34)))) and ((3 -2)==v212)) then v127=1;break;end end end if ((1==v127) or ((1789 -876)>=((2711 + 3249) -(421 + 755)))) then v88[v128 + (1 -0) + (0 -0)]=v129;v88[v128]=v129[v90[4 + 0]];break;end end break;end end else local v130=0 + 0 + 0;local v131;local v132;while true do if (((13 -10)<(376 -235)) and ((1360 -(1327 + 32))==v130)) then while true do if ((v131==(0 + 0)) or ((2563 -(349 + 1180))<=(22 + 197 + 14))) then v132=v90[2 + 0];v88[v132](v13(v88,v132 + (1468 -(827 + 433 + 207)),v90[1858 -(713 + 1142)]));break;end end break;end if (((0 -(0 + 0))==v130) or ((5084 -3755)>=(1354 + 1119))) then v131=0 + 0;v132=nil;v130=1;end end end elseif ((v91<=5) or (1302>(6522 -(1369 + 321)))) then if ((v91>(1 + 3)) or (4118<=(53 + 11))) then local v133=0 + 0;local v134;local v135;local v136;local v137;while true do if ((v133==(1853 -((2912 -(1443 + 357)) + (2407 -(1483 + 185))))) or ((2457 -(1190 + 105))>4669)) then while true do if (((10949 -6952)>=2074) and (v134==(1844 -(1301 + 543)))) then v135=v83[v90[(2860 -1970) -(312 + 575)]];v136=nil;v134=771 -(117 + 653);end if (((987 + 42)<=4059) and (v134==(1496 -(562 + 932)))) then for v222=1 -0,v90[(713 + 159) -(328 + 540)] do local v223=(31 + 49) -(52 + 28);local v224;local v225;while true do if ((v223==0) or (1709<(2412 -(604 + 508)))) then v224=0 -0;v225=nil;v223=1833 -(1594 + 238);end if (((2547 -1274)<2494) and (v223==(1 + 0))) then while true do if ((v224==(1 -0)) or (1578==(1543 + 2574))) then if (((368 -200)==(87 + 81)) and (v225[1 -0]==(86 -(32 + 21)))) then v137[v222-(3 -2)]={v88,v225[12 -9]};else v137[v222-(1 + 0)]={v33,v225[2 + 1]};end v87[ #v87 + (270 -(98 + (345 -174)))]=v137;break;end if ((v224==0) or (((10783 -4997) -(1014 + 84))<(2656 + 1324))) then local v268=0 + 0;while true do if ((v268==(975 -(760 + 215))) or (4928<(10355 -6444))) then v67=v67 + 1;v225=v81[v67];v268=2 -1;end if (((4624 -2577)>=(1127 -836)) and (v268==(2 -1))) then v224=1 -(0 -0);break;end end end end break;end end end v88[v90[2 + 0]]=v30(v135,v136,v34);break;end if (((359 + 779)==(1365 -(67 + 160))) and (v134==1)) then v137={};v136=v10({},{__index=function(v226,v227)local v240=0 -0;local v241;local v242;while true do if (((1154 -(71 + 354))<(1479 -(91 + 466 + 9))) and ((0 -0)==v240)) then v241=851 -(377 + 474);v242=nil;v240=1 + 0;end if ((427<1577) and (v240==(1 -0))) then while true do if (((2987 + 1028)>=3311) and (v241==(631 -(292 + 339)))) then local v270=0;while true do if ((((4584 -2074) + 1545)==(1929 + 2126)) and (v270==0)) then v242=v137[v227];return v242[1][v242[2]];end end end end break;end end end,__newindex=function(v228,v229,v230)local v243=1164 -((1373 -(53 + 553)) + 397);local v244;local v245;while true do if ((v243==(0 + 0)) or ((3546 -1774)==1831)) then v244=0 + 0;v245=nil;v243=(1403 -(890 + 512)) + 0;end if (((388 -((1033 -(671 + 98)) + 123))==v243) or (319==((10381 -(130 + 437)) -6030))) then while true do if (((3163 -1286)>916) and (v244==(345 -(53 + 292)))) then v245=v137[v229];v245[1][v245[5 -3]]=v230;break;end end break;end end end});v134=2 + (1155 -(761 + 394));end end break;end if ((v133==0) or ((2031 -(2882 -(1257 + 692)))>=(5947 -((193 -76) + 1663)))) then v134=0 -0;v135=nil;v133=1 + 0;end if (((1720 -((2207 -(108 + 881)) + 501))==v133) or ((958 + 105)>=(1147 + 225))) then v136=nil;v137=nil;v133=2;end end else v88[v90[582 -(42 + 538)]][v90[3]]=v88[v90[3 + 1]];end elseif ((v91==6) or (1766==(5217 -(1052 + (963 -757))))) then local v139=1985 -(756 + 1229);local v140;while true do if ((v139==0) or (((6375 -4111) -(2941 -(310 + 1204)))<((1287 -(169 + 1116)) + (1217 -(807 + 187))))) then v140=v90[1567 -(475 + 1090)];v88[v140]=v88[v140](v88[v140 + (2 -1)]);break;end end else local v141=0 + 0;local v142;local v143;local v144;while true do if ((3338<(4363 -(3 + 5 + 2 + 1))) and ((0 -0)==v141)) then v142=(322 -(125 + 197)) -0;v143=nil;v141=(3 -2) + 0;end if ((v141==(3 -2)) or (4622<2682)) then v144=nil;while true do if ((((7539 -5096) + 2494)>=(2869 -(47 + 389))) and (v142==(1624 -((1806 -(825 + 630)) + 1272)))) then while true do if (((5420 -(633 + 675))<=(1621 + 3067)) and (v143==0)) then v144=v90[589 -((874 -599) + 312)];v88[v144](v88[v144 + 1 + 0]);break;end end break;end if (((55 + 166)==(156 + 65)) and (v142==(0 + 0))) then local v216=0 -0;while true do if ((1495<=4432) and (0==v216)) then v143=0 + 0;v144=nil;v216=2 -1;end if ((1200<=(7311 -5717)) and (v216==(1 -0))) then v142=326 -(271 + 54);break;end end end end break;end end end elseif (((3883 -1918)>(1309 + 121)) and (v91<=(9 + 2))) then if ((v91<=(6 + 3)) or (((16415 -(22 + 19)) -11509)<(3457 -2035))) then if ((2844<4567) and (v91>(1325 -(223 + 1094)))) then v88[v90[2]]=v33[v90[11 -8]];else do return;end end elseif ((v91==(1 + 9)) or ((1488 + 80)>(723 + 1649))) then v88[v90[2]]=v30(v83[v90[4 -(1 + 0)]],nil,v34);else local v147=0 -(0 -0);local v148;local v149;while true do if ((v147==(1 + 0)) or ((2197 -1456)>3215)) then while true do if (((1987 -(196 + 38))>(2071 -1620)) and (v148==(849 -(596 + 253)))) then v149=v90[1584 -((3071 -(777 + 1158)) + 446)];v88[v149]=v88[v149](v13(v88,v149 + (3 -2),v90[7 -4]));break;end end break;end if (((10228 -5539)==(3269 + 1420)) and (v147==0)) then v148=(1854 -(344 + 94)) -(152 + 108 + 1156);v149=nil;v147=2 -1;end end end elseif (((17 + 40)<3250) and (v91<=(23 -10))) then if ((v91>(1 + 11)) or ((1837 + 3146)<((28672 -18792) -(6555 -(482 + 1071))))) then if (((103 + 723)<(68 + 2552)) and v88[v90[4 -(9 -7)]]) then v67=v67 + 1 + 0;else v67=v90[(20 -14) -(3 + 0)];end else local v150=1230 -(196 + 1034);local v151;while true do if (((5616 -3173)<(8151 -3602)) and (v150==0)) then v151=v90[124 -((626 -(423 + 138)) + 57)];v88[v151](v13(v88,v151 + 1,v68));break;end end end elseif (((10867 -8227)<=(4559 -(103 + 399))) and (v91<=(12 + 2))) then local v152=0 + 0;local v153;local v154;local v155;local v156;while true do if (((3901 + 331)>=3514) and ((0 -0)==v152)) then v153=v90[1 + (1227 -(1107 + 119))];v154,v155=v85(v88[v153](v13(v88,v153 + (462 -(126 + 335)),v90[3])));v152=1 + 0;end if (((1 + 0)==v152) or (3224>=(11443 -8028))) then local v198=0;while true do if (((2057 + (5084 -3809))<3731) and (v198==((2 -1) + 0))) then v152=2 + 0;break;end if (((5112 -(449 + 488))>(4241 -(109 + 150))) and (v198==(139 -(3 + 15 + 121)))) then v68=(v155 + v153) -1;v156=1596 -(240 + 1356);v198=1 -0;end end end if (((4690 -(374 + 655))<=(5402 -(201 + 405))) and (v152==(1 + 0 + 1))) then for v202=v153,v68 do local v203=1027 -(759 + (2232 -(1742 + 222)));local v204;local v205;while true do if ((1217<=(9071 -4394)) and (0==v203)) then v204=83 -(64 + 19);v205=nil;v203=1;end if ((1==v203) or ((4841 -(442 + 82 + (244 -169)))==4496)) then while true do if ((v204==(0 + 0)) or (1259>=(7090 -3279))) then v205=336 -(49 + 287);while true do if ((v205==(568 -(526 + 42))) or (4326==((2413 -1094) + 181))) then v156=v156 + 1 + 0;v88[v202]=v154[v156];break;end end break;end end break;end end end break;end end elseif (((620 -208)<(21 + 2677)) and (v91==(39 -24))) then v67=v90[3 + 0];else v88[v90[4 -(497 -(397 + 98))]]=v88[v90[(1 -0) + 2]][v90[4 + 0]];end elseif ((v91<=(13 + 11)) or ((6453 -2394)<(5953 -3367))) then if ((v91<=(58 -38)) or (1901==(524 -((1526 -(418 + 1037)) + 22)))) then if (((3496 -(2535 -(92 + 813)))<(1882 + 1424)) and (v91<=18)) then if ((v91>((294 -(188 + 94)) + 5)) or ((1762 -(76 + 38))>=(3038 + 319))) then local v157=0 -0;local v158;local v159;local v160;while true do if ((v157==((0 + 0) -0)) or ((5179 -(3027 -1565))<=3384)) then v158=0 + 0;v159=nil;v157=49 -(44 + 4);end if ((v157==(1 -0)) or ((3983 -(1171 + 481))>=(4801 -(56 + 5)))) then v160=nil;while true do if (((1253 + 539)<(3177 + 829)) and (v158==(601 -(126 + 474)))) then for v231=3 -2, #v87 do local v232=0 + 0;local v233;local v234;while true do if ((v232==(0 -(0 -0))) or ((135 + 2561)<=(2575 -(317 + 1154)))) then v233=582 -(403 + 179);v234=nil;v232=1 + 0;end if (((764 -485)<(455 + 2463)) and (v232==1)) then while true do if ((v233==(0 + 0)) or ((5054 -(3681 -(832 + 385)))<(1010 -(659 + (549 -(236 + 77)))))) then v234=v87[v231];for v272=1347 -(202 + 1145), #v234 do local v273=0;local v274;local v275;local v276;local v277;local v278;while true do if ((3447>=2304) and (v273==(1785 -(502 + 1281)))) then v278=nil;while true do if ((v274==0) or ((3079 + 1000)<(2064 -(1689 + 84)))) then v275=0;v276=nil;v274=1;end if ((v274==(1 + 0 + 1)) or ((389 + 1880)==(225 + 1785))) then while true do if (((1231 + 116)<=2025) and (v275==(1584 -(1538 + 45)))) then v278=v276[2 -0];if ((4809>=208) and (v277==v88) and (v278>=v159)) then local v292=645 -(187 + 394 + 64);local v293;while true do if ((v292==((0 -0) + 0)) or ((686 + 1914)>=4133)) then v293=0 -0;while true do if ((v293==(0 + 0)) or (1161>(2800 + 1239))) then v160[v278]=v277[v278];v276[1]=v160;break;end end break;end end end break;end if (((4915 -(212 + 361))>=(3570 + 264)) and (v275==(0 + 0))) then local v291=0 -0;while true do if (((2418 -(347 + 471))<=(10624 -6288)) and (v291==(0 -0))) then v276=v234[v272];v277=v276[1];v291=1;end if ((105<(6403 -(1305 + 457))) and (v291==((1 + 0) -0))) then v275=3 -2;break;end end end end break;end if (((2255 -1027)==(1329 -(69 + 13 + (487 -(389 + 79))))) and (v274==(1565 -(1192 + 372)))) then local v290=0 + 0;while true do if ((v290==(0 -0)) or ((1444 -535)>4604)) then v277=nil;v278=nil;v290=1 + 0;end if ((v290==(285 -(101 + 183))) or ((424 + 278)<(630 + 0))) then v274=2 -0;break;end end end end break;end if ((v273==(557 -(434 + 122))) or ((2658 -(49 + 100 + 3))<(99 -71))) then v276=nil;v277=nil;v273=2;end if (((4837 -(1270 + 458))==3109) and (v273==(0 + 0))) then v274=0 -0;v275=nil;v273=1916 -(370 + (7410 -5865));end end end break;end end break;end end end break;end if ((v158==(0 + 0)) or (3299<=3053)) then local v218=0 -(0 -0);local v219;while true do if ((v218==(0 + 0)) or (((3012 -(528 + 1107)) -730)>(2709 -(53 + 484)))) then v219=0 + 0;while true do if ((v219==(1 + 0)) or (2839<(6336 -(4538 -(338 + 58))))) then v158=738 -(115 + 247 + 375);break;end if ((v219==(1518 -(528 + 990))) or ((3944 -(1271 + 696))<=(1315 + 285))) then v159=v90[1719 -(1382 + 335)];v160={};v219=1;end end break;end end end end break;end end else local v161=0 + 0;local v162;local v163;local v164;local v165;local v166;local v167;while true do if (((342 -(247 + 93))==v161) or ((1334 + 608)==4428)) then v166=nil;v167=nil;v161=9 -6;end if ((612>(342 -231)) and (v161==(1 + 0))) then v164=nil;v165=nil;v161=1078 -(957 + 119);end if ((v161==0) or ((6046 -(618 + 609))<=1524)) then v162=1309 -(137 + 1172);v163=nil;v161=1 + 0;end if (((5746 -1514)==(3713 + 519)) and (v161==(1282 -(996 + 283)))) then while true do if (((5196 -(1041 + 329))==3826) and ((0 -0)==v162)) then v163=(387 + 296) -((1220 -(399 + 229)) + 91);v164=nil;v162=3 -2;end if (((5980 -(378 + 887))==4715) and (v162==(1761 -(929 + 830)))) then v167=nil;while true do if ((v163==(4 -(6 -4))) or (803>=(6643 -4717))) then for v255=v164,v68 do local v256=1698 -(1583 + 115);local v257;while true do if (((1843 + 1219)>(249 + 2616)) and (v256==(0 -0))) then v257=0;while true do if ((1630>=(2701 -1910)) and (v257==(0 + 0))) then v167=v167 + (743 -(609 + 133));v88[v255]=v165[v167];break;end end break;end end end break;end if ((v163==(0 + (201 -(153 + 48)))) or ((1409 -(2689 -1858))>(5905 -(721 + 348)))) then local v249=0;local v250;while true do if ((v249==(0 -0)) or ((3885 + 275)<3150)) then v250=(0 -0) + 0;while true do if ((v250==(2 -1)) or ((2161 + 1920)==(2910 -(147 + 1784)))) then v163=1 + 0;break;end if (((2231 + 690)<(7008 -3743)) and (v250==(130 -(81 + 49)))) then v164=v90[5 -3];v165,v166=v85(v88[v164](v88[v164 + 1]));v250=1336 -((2236 -(238 + 715)) + 52);end end break;end end end if ((v163==(2 -1)) or ((7155 -4280)<=((2789 + 1064) -(296 + 1245)))) then local v251=(993 -375) -((908 -(53 + 312)) + 75);local v252;while true do if ((v251==(809 -(765 + 44))) or ((8553 -4578)<(3398 -(120 + 1092)))) then v252=1824 -(1397 + 427);while true do if (((601 + 1321)>=615) and (v252==(0 -0))) then v68=(v166 + v164) -(1851 -(173 + 1677));v167=14 -(7 + 7);v252=1;end if ((v252==(1 + 0)) or ((70 + 154 + 4755)<3946)) then v163=6 -4;break;end end break;end end end end break;end if ((((6466 + 1415) -5467)>(3990 -(521 + 1204))) and (v162==(1 + 0))) then v165=nil;v166=nil;v162=2;end end break;end end end elseif ((v91>(15 + (1335 -(1147 + 184)))) or ((3656 -1178)==1472)) then for v188=v90[6 -4],v90[12 -9] do v88[v188]=nil;end else v88[v90[233 -((570 -408) + 69)]]=v90[532 -(123 + 406)]~=(1824 -(1617 + 207));end elseif ((v91<=22) or ((2286 + (1552 -(590 + 296)))<=(1347 -(128 + 242)))) then if ((v91==(42 -21)) or (462<=(163 -(14 + 99)))) then local v169=694 -(140 + 554);local v170;local v171;while true do if (((2615 -525)<=(5406 -(1120 + 759))) and (v169==(1 + 0))) then while true do if (((1290 -(140 + (1139 -(296 + 141))))<(2931 + 249)) and (v170==(0 -0))) then v171=v90[2];v88[v171]=v88[v171](v13(v88,v171 + (2 -1),v68));break;end end break;end if (((3665 -(66 + 1640))>=(2815 -(1245 + 623))) and ((0 + 0)==v169)) then v170=0 -0;v171=nil;v169=1;end end elseif (((5560 -((1332 -689) + 63))>=(2161 -(628 + 587 + 154))) and (v90[1 + 1]==v88[v90[2 + 2]])) then v67=v67 + 1;else v67=v90[2 + 1];end elseif ((3044<=(1072 + 3628)) and (v91>23)) then v88[v90[(424 + 272) -(170 + 524)]]();else v88[v90[(1061 -(947 + 112)) -0]][v90[(1175 -(292 + 879)) -1]]=v90[4 + 0];end elseif ((v91<=28) or (3956==(944 -(80 + 538)))) then if (((2183 -(399 + 638))==(1411 -265)) and (v91<=(63 -37))) then if (((13351 -9972)<4406) and (v91==(53 -(40 -12)))) then v88[v90[1 + 0 + 1]]=v34[v90[3 + (1680 -(979 + 701))]];else local v174=1686 -(1271 + 415);local v175;local v176;local v177;while true do if ((v174==(912 -(496 + 415))) or ((4755 -(100 + 851))<=((1911 + 2200) -(294 + 289)))) then v177=v88[v175 + (438 -(8 + 428))];if (((2509 -(955 + 566))>=(1228 -(401 + 53 + 0))) and (v177>((2887 -1057) -(1647 + 183)))) then if (((999 -(192 + (1876 -(797 + 908))))<(2031 -(225 + 150 + 33))) and (v176>v88[v175 + 1 + 0 + 0])) then v67=v90[3 + 0];else v88[v175 + 2 + 1]=v176;end elseif ((v176<v88[v175 + (1868 -(1239 + 628))]) or ((1393 + 123)==2928)) then v67=v90[881 -(625 + 253)];else v88[v175 + 3 + 0]=v176;end break;end if ((v174==(0 + 0 + 0)) or ((2650 -(88 + 905))==(1017 + 620))) then local v199=0 + 0;while true do if ((v199==(0 -0)) or ((3367 -(605 + 1123))>(5538 -1822))) then v175=v90[2 + 0];v176=v88[v175];v199=1;end if (((11289 -7343)==3946) and (v199==1)) then v174=1 -(517 -(78 + 439));break;end end end end end elseif ((1855>(272 -163)) and (v91>(516 -(292 + 197)))) then local v178=0;local v179;while true do if ((2133>(1164 -507)) and ((0 + 0)==v178)) then v179=v90[1 + 1];v88[v179]=v88[v179]();break;end end elseif ((((6582 + 5984) -9411)==(3708 -(409 + 144))) and (v88[v90[1 + 1]]==v90[4 + 0])) then v67=v67 + 1;else v67=v90[365 -(132 + 230)];end elseif ((v91<=(81 -51)) or (((3578 -(685 + 1311)) -(70 + 1218))>=(3800 -(1494 + (576 -182))))) then if ((v91==((879 + 502) -(946 + (1279 -(122 + 751))))) or ((29 + 1684)==(125 + 707))) then v88[v90[5 -3]]=v90[(212 -(122 + 83)) -(4 + 0)];else v88[v90[2]]={};end elseif ((v91<=(1369 -(719 + 619))) or ((2185 + 1455)==(4 -0))) then local v182=1087 -(601 + 486);local v183;local v184;while true do if ((2500>=((1485 + 45) -(952 + 570))) and (v182==(602 -(142 + 459)))) then for v206=v183 + (4 -3),v90[(535 + 251) -(508 + 275)] do v8(v184,v88[v206]);end break;end if (((5166 -(125 + 694))>(2938 -(959 + 313))) and (v182==(0 -(0 -0)))) then local v201=1709 -(976 + 733);while true do if (((2741 -(283 + 395))==(6895 -4832)) and (v201==(1317 -((798 -490) + 1008)))) then v182=1;break;end if (((416 + 1276)<(1116 + 3055)) and (v201==(1221 -(234 + 987)))) then v183=v90[6 -4];v184=v88[v183];v201=3 -2;end end end end elseif ((v91>(455 -((922 -685) + 186))) or ((5945 -((2769 -1655) + 141))==(122 + 154))) then v88[v90[2]]=v88[v90[3 -0]];else local v192=852 -(621 + 231);local v193;local v194;local v195;local v196;while true do if ((v192==(3 -1)) or ((3526 -(785 + 48))>((25114 -14437) -5936))) then while true do if (((819 -(147 + 235))<=(1861 -737)) and (v193==(2 -(1289 -(1218 + 71))))) then if (((11460 -6781)>=(16624 -12971)) and (v195>(0 + 0))) then if ((2615>=1867) and (v196<=v88[v194 + (3 -2)])) then local v263=690 -(334 + 356);while true do if ((v263==((0 -0) + 0)) or ((3293 + 85)==(5779 -(783 + (956 -(487 + 378)))))) then v67=v90[683 -(545 + (636 -(196 + 305)))];v88[v194 + 1 + 2]=v196;break;end end end elseif ((v196>=v88[v194 + 1]) or ((1095 -545)==(3244 + 301))) then local v264=360 -(128 + 232);local v265;while true do if ((((6513 -(362 + 356)) -3445)==(3905 -(1087 + 37 + 431))) and (v264==(0 -0))) then v265=0 -0;while true do if ((v265==(0 + 0 + 0)) or ((2508 + 615)==(864 -(215 + 35)))) then v67=v90[4 -1];v88[v194 + (8 -5)]=v196;break;end end break;end end end break;end if (((0 + 0 + 0)==v193) or ((2732 -(336 + 773))>=3846)) then v194=v90[2];v195=v88[v194 + (5 -3)];v193=896 -(180 + 715);end if (((4936 -2214)>=(1583 -1065)) and (v193==(1 + 0))) then local v246=0 -(0 -0);while true do if ((v246==(2 -1)) or ((4900 -2741)==(14316 -10326))) then v193=2 + 0;break;end if (((0 -0)==v246) or (((2946 -(766 + 1232)) -(1821 -(169 + 1171)))>(9243 -6252))) then v196=v88[v194] + v195;v88[v194]=v196;v246=1;end end end end break;end if (((564 + 270)>781) and (v192==(0 + 0 + 0))) then v193=0;v194=nil;v192=1 -0;end if (((3887 + 397)>(222 + 1157)) and (v192==(1 + 0))) then v195=nil;v196=nil;v192=2 -0;end end end v67=v67 + (632 -(537 + 94));break;end end end end v66=3;end if (1==v66) then v69={...};v70=v12("#",...) -1;v66=2;end if (v66==0) then v67=1;v68= -1;v66=1;end end end;end return v30(v29(),{},v17)();end if (v18==4) then function v25()local v57=v24();local v58=v24();return (( -(1 + 1) * v21(v58,32)) + 1 + 0) * (((172 -(81 + 90)) + 1)^(v21(v58,4 + (68 -51),(47 + 1287) -(216 + 1087)) -1023)) * ((((v21(v58,(2524 -(1807 + 135)) -(128 + 149 + 304),59 -39) * ((1 + 1)^(47 -15))) + v57)/(2^(47 + 5))) + (636 -(426 + 209)));end v26=nil;function v26(v35)local v59;if  not v35 then local v72=0 + 0 + 0;while true do if (v72==(0 -0)) then v35=v24();if (v35==0) then return "";end break;end end end v59=v4(v16,v19,(v19 + v35) -(1876 -(850 + 1025)));v19=v19 + v35;local v60={};for v61=1 + (69 -(40 + 29)), #v59 do v60[v61]=v3(v2(v4(v59,v61,v61)));end return v7(v60);end v18=5;end if (v18==1) then v21=nil;function v21(v36,v37,v38)if v38 then local v73=(v36/((2 -(0 -0))^(v37-(1390 -(1137 + 252)))))%((9 -7)^(((v38-(525 -(394 + 130))) -(v37-(1 + 0))) + ((3 -1) -1)));return v73-(v73%(2 -1));else local v74=1609 -(1182 + 427);local v75;while true do if (v74==(1695 -(925 + 770))) then v75=(8 -6)^(v37-1);return (((v36%(v75 + v75))>=v75) and (1572 -((4175 -2711) + 107))) or (0 -0);end end end end v22=nil;v18=2;end end end vv9());break;end if (2==v0) then v7=table.concat;v8=table.insert;v9=getfenv or function()return _ENV;end;v0=3;end if (v0==3) then v10=setmetatable;v11=pcall;v12=select;v0=4;end end end